%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 100.000000 54.007996
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 100 55
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 100 55
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-CondensedBold
%!FontType1-1.0: HelveticaNeue-CondensedBold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-CondensedBold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /one put
dup 34 /two put
dup 35 /seven put
dup 36 /period put
dup 37 /zero put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -330 1 index div -336 2 index div 1236 3 index div 1186 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/period 1 def
/zero 2 def
/one 3 def
/two 4 def
/seven 5 def
/u20BC 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-330 -336 1236 1186}def
/UniqueID 4514189 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C977ACEB10D7B7CCAA782B3E10A4BEAFD6991C7A5E7DAF786CA93E9C71C4F0DC10D5157F4358B506C7FD39B455A52E7ADD4CCA4F8ED2977EC2BC902AF32D277217960D8EF6817C2EF53EF0C488EE4E9418858D0403F368B09C15D414CF92FA7C6A2AD2A7FCC2443B0F97C3DB2F2F1929433ECD9F4F550AE4534E7DFCCEDA28E7D327F67067778B692AD5FD7B685889E441AFF4D2585409C15F33F88462F14B003BB0E216B544FCFD9E8DA33B9BE1BCB98287FDAAA0DA84CD63FFB8957CD2D4B9F3DB180F5B7F4EB9147EE3958F4FF3489EDEBDF352A8FED48B039253C6622E1C02A75F13C2180559A8F19F5507302BD06B04F999ED79E5053EC8BE1F77E82520438544E51418C1D4798DD7EEF3B44853AD2B636678FF41B77C284B0C5B83EF3A3805D5E12AED9EF916482948D2BC5423A23B42A4BB2866837D7B4A4FE3B108C54EB5488CE187F90E64E82626CE91870BF5D2E5C10CAA543B93AC5C0983FC9834ABDB88EECFFA0AA0321A468CEEBCA1F88596174425EDB14394554A6BAC767B8275C8D194C67DE68379B30EF192FB71E0E49161BCB5620F6C75ED25FD860645C326F676A8152FACA80DB5C7BEA6F5981F51B9B7931007A510BFECACFFC8EA775EFF8A0D2179A75CD80A3C5B027090199D57DCC55C933C2717E75A5E899969641915C4004E094CAC3D2071465D75DB632824626C71174703FD5577F585675AD5969CA933C2890F75D17E5E2CC3EF6C2FBEA0B84C25F2EF962D673D25DEC69A378A8CE
E01098241746A735EB2DC24BF70937031ACA14589CE770E1D3CE40102474AD48496A4DD0DEAD4B205F3077329030F3DA0DA0789931209575B2FBB2F079BB2623D88DEBC6C6A602909907721CB918658802F20507DC4F65CCC1831701F82CC915E4A0D1904FE886198800C4B25104E76E50BD7B0E2607CA89C978B6E25BFB81C481DE344019E46DF407DB06B70ECB7B1885CED52B4699D8DEBCC2088C6CC72933E0E977BBA4B4F2762A34F5C32FB6D43C7E2C6FD82112E9FF265E1B32246103F1C34633B75A0406B0E07ACF62338566833FA29F68895718B04B7B58BB0C489C1A6BB87F44FC2C36C9D188DFE5D1EFE74CE74692EC2D5E62351AF58B2F5F521B03C6AD00435C45FD6EB5DB9ECAA4523CF859142E0F838DB8B719CEB27B706B3E071D8D339907CFDA97BC4F7859D67793CCFD2EF55799D578559D8248791B42322B44E52CC5C510596019D2AD527F54E428A25E8A2A0A7C200278B4CACE8CA420E94A7CB1852C72C98880AB599EC5608B8CC50FA89D5CE372002594FF5E3BC5F0C65595A2FF1E9E72D4081838E7ECC151D49F462509C8175B3CADB023DCE8A6CC268AF5AEE8CFD029269D5ADCACE285CBF75056709F009E478D2CB839BF0085926A6858D844FDD6DCD975428596095276BC86A24EB2A6BBC06F2FC3CC7D51
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-CondensedBold cguidfix
/F1.1/HelveticaNeue-CondensedBold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 100 54.007996 rc
100 0 0 46 0 0 cm
save
900 38 cg_miaiproc 
92 -46 -46{
gsave 1 300 div 1 138 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
300 47 scale
BI
/Width 300
/Height 47
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 46 m 0 0 l 300 0 l 300 46 l h W n EOD
JcC<$JcC<$JcC<$JcF@%gAoY$JcC<$JcC<$JcC<$XoI,UJcGWIJcC<$JcC<$JcCB&!<<,U!.k0Hs+13$
s+13$s+14's4[P"s+13$s+13$s+13$s0)IW!.k1Gs+13$s+13$s+13(s8;rT!.k0Fs+13$s+13$s+14)
s4[Ous+13$s+13$s+13$s0;UY!.k1Es+13$s+13$s+13*s8)fT!.k0Ds+13$s+13$s+14+s4[Oss+13$
s+13$s+13$s0Ma[!.k1Cs+13$s+13$s+13,s7lZT!.k0Bs+13$s+13$s+14-s4[Oqs+13$s+13$s+13$
s0_m]!.k1As+13$s+13$s+13.s7ZNT!.k0@s+13$s+13$s+14/s4[Oos+13$s+13$s+13$s0r$_!.k1?
s+13$s+13$s+130s7HBT!.k0>s+13$s+13$s+141s4[Oms+13$s+13$s+13$s1/0a!.k1=s+13$s+13$
s+132s766T!.k0<s+13$s+13$s+143s4[Oks+13$s+13$s+13$s1A<c!.k1;s+13$s+13$s+134s7$*T
!.k0:s+13$s+13$s+145s4[Ois+13$s+13$s+13$s1SHe!.k19s+13$s+13$s+136s6fsT!.k08s+13$
s+13$s+147s4[Ogs+13$s+13$s+13$s1eTg!.k17s+13$s+13$s+138s6TgT!.k06s+13$s+13$s+149
s4[Oes+13$s+13$s+13$s2"`i!.k15s+13$s+13$s+13:s6B[T!.k04s+13$s+13$s+14;s4[Ocs+13$
s+13$s+13$s24lk!.k13s+13$s+13$s+13<s60OT!.k02s+13$s+13$s+14=s4[Ojs7lQfqX=7Tr:p9I
s7lTgr:p*Vq"X^\r:p9[s7lQfr4`(+qtU*arOMt'rqQEdqX=4SqY:!`ri#hss7lTgr:p-Wq"X^\r:p8V
s7lQfqX=7Tr:p9Xs2G#m!5ed2rV66Xq=sm_rn[VPrr)ikr:p*Vq"X^\r:p9[s7lQfr42_"r:p6-s7lWh
rqQEdqX=4SqY:!`rhoekrqQEdqX=4SqY:!`rq-5bs7lQfqX=7Tr:p8qs5sCT!5ed2rV66Xq=sm_rn[VL
rqQEdq="+RqY:!`rpTjerV?Eer42_"r:p6$s7lTgr:p-Wq"X^\r:p9hs/c7qrqQEdqX=4SqY:!`rgs/b
s7lQfqX=7Tr:p8qs4[Oss7lQfp&XOHqX""?q!%SFq"sO[q#:'bq"+:HpuUu(pu_A=q"4@Xq"a^Wq!Ik@
bNSifros4Fq"4@YbQ%A8q"FLNpu_A2puD/4q!RqNq#%]&q"t-cq=aUOpu_A2puD/4q!RqNq#%&iq#1!]
q!@e=q!%SFq"s@Va8alobQ%A9q"FLLpuhG:q"+:Xn,N1^q"jjY!V>pXlhKT1iqV[2mJ->KqY9m]o_@hK
l-&;cl1jZ@o_A=,rrN&qqY^-^q!Rq>pu;)/puhG?q"FL\\c;I&q"FLNpu_A2puD/4q!RqNq#($hXoJ1p
q"FLLpuhG:q"+:XYlEebpAiD:q#1!]q!@e=q!%SFq"sO[q#:'bq"+:HpuUu(pu_A=q"4@Xq"ap]qt0[N
q!#ucq!%S@q"4@YbQ%A8q"FLNpu_A2puD/4q!RqNqYUBlr42k&r:p!\meGr>iqVR/kP4K?pA"Q`rrN)s
qYg3_q!@e=q!%SFq"q;qgAob'q#1![puVJ%r6b;\ps8`rq"=F^q#:'`q!@e3ps/ZQn%\Y:psAfnq!@eD
puD/!pr^e"q8r][psf*"q"4@[h>d9Jq"+:Aps]#Xn%e_<psSrsq!n.VbQ%A8q"+LGqrIP$pr;d<pr<*W
pu;)=q"qW%q#1![puV:uprN6VpuM5Ckl8d)gAob'q#1![puV:uprN6VpuM5Cq#C-gq"XXNptb_jpr)X9
pr3$Tpttl5q!Rq;psf)]bJs>"psf*"q"4@[h>d9JrU]sYpuM5!pr;d<pr<*Wpu;)=q"r87q#'pYpuM5!
pr;d<pr<*Wpu;)=q>10h\c;I'q"4@CpsJlXps8`rq":lkirJlTeGo=Bq"4@CpsJlXps8`rq"=F^q#:'`
q!@e3ps/ZQn%\Y:psAfnq!@eDr8[b9psf)]bJs>"psf*"q"4@[h>d9Jq"+:Aps]#Xn%e_<psSrsq!n.V
bQ%A8q"+:Aps]#Xn%e_<psSrsq!n.V\c;I'rUg$[puV:uprN6VpuM5CYlEGXn,N1^q"sjZq!Ik6priQ?
rj)=!ppg+Oq!n.Yq"jdQpt#5Spoa(an#,rapqcaVptb_lpq$7#h5'h@pnIP]!4Vd5psSs(q"s4Rq#:']
puD.kppBgrpo*tepo=+ppr<*dq"+:Zh>d9Lq"=FBr5noZppBgrpo*tepo=+ppr<*dq"+:Zh>d9Lq"sjZ
q!Ik6priH<po=,!pt5B3q#9a^bQ!(
~> 0 47 m 0 0 l 300 0 l 300 47 l h W n EOD
gAp^Bq#:'cq"=FLpttkipp0[pppg+Oq!n.Yq"jdQpt#5Spoa(an#,ra!PuVK_>)UVh>#@l](i;]V"g_[
UA1Y]\+nDHm.gJ?s7lTgp%[SBanW7<Wq`OfWV`^pWq`mp`q\HdoD&:?s7lTgp%[SBanW7<Wq`OfWVELg
ZM;H7htZg<rS@MKrW)ikqtTjZmJ,T6bP8C<Wqa+!f_G"3rji'`!:Ts_rqQBcp&=@UmJ,T6bP8C<Wqa+!
f_G"3rqQ?bmJ,9-^A+l"W:-YZYP>s/f(e(rd.k3IWo'TQUnmd\pnIP]pp^%Hq!@eQk5Y5Uq"=FBprW<<
po=+fpo4%gpp0\7pttl<q#0%K!WN)prqQ0]j7pak[.pZrW;*@eWq`mp`q\HdoD&:?s7lTgqtTjZmJ,T6
bP8C<Wqa+!f_b4<nbE*os4[PBs7lTgqtTjZmJ,T6bP8C<Wqa+!f_G"3rqZBjqY9IQf(cuSY4&=XVtdIj
_>)UVh>#@l](i;]V"g_[UA1Y]\+nDHm.gJEs82ikrqQ0]j7pak[.pZrW;*@eWq`mp`q\HdoD&:?s7lTg
p%[SBanW7<Wq`OfWVELiZ2q8:pr<*dq"+:Zh>d9Lq"sjZq!Ik6priH<po=,!pt5B3q#7i(!<<,U!:Ts_
qtTaWiqUss^\Fo*R/!!BWqb!:meH_To_@;<^A+Q"SG8oTX8&[hTD4lRW;NUh_"c:OanW:=V=1&OT(nfM
Q2$F8Pk_3Pb4t5rqr[qRqY9@NcM4X=T_P8MWqi@hUA1AUXn^$5kP4l/s7lHclM/["YkXmdU@5,WUA1AU
Xn^$5kP4l/s7lKjo)&"QiqUss^\Fo*R/!!BWqb!:meHdls4[PBs7lKdo(_5Bdf%Vh^\Fo*R/!!BWqb!:
meH_To_@;<^A+Q"SG8oTX8&[hTD4lMW;+1'd.k`X[J6TeTD5#QS+r9DO8+t7W;+O1l1k/<s7lHclM/["
YkXmdU@5,WUA1AUXn^$5kP4l/s8DflqY9@NcM4X=T_P8MWq`=`TD5P`anY&oq;))GqtTaWiqUss^\Fo*
R/!!BWqb!;mJu\Mrji'`!:Ts_qtTaWiqUss^\Fo*R/!!BWqb!:meH_ToDmbDhY=h[V>-SUV"h"cWVE+\
ReWiV_"c:OanW:=V=1&OT(nfMQ2$F8Pk_3Pb4t5rqs+4[s7lHclM/["YkXmdU@5,WUA1AUXn^$5kP4l/
s7lHclM/["YkXmdU@5,WUA1AUXn^$5kP4l/s7lKdo(_5>deLTPXSA1XQM@KTdJ3/)rji(-!8deFs7lBa
kP39r[J6NlQM?@4O8,XJchQo&qY9IQd.j[:R/!6I[J7`9_>(&*QM[*LRJ<u\anX3W`q[.6[J7'&WVDqW
NVJY2WVFd6m.gM@s7l9^hY=\WTD4oNY4'7&Y5k'fS+rQL\+n_Qo\KQBp%[D=](homS+s/T_YC>0S+rQL
\+n_Qo\KQBq#'=RkP39r[J6NlQM?@4O8,XJchQo&rji'`!:Ts_q"X%Ibke^J[C,e)pm1]4plG3Jps8a&
q"jdQpsAf:pmCiIppKn9pqca*pm1]CpojJ7ps8`Tpq#q%pp0[o!LfJRReVm;OnbpNcM6c$r9"%Sp%[D=
](homS+s/T_YC>0S+rQL\+n_Qo\KQEp&=XZhY=\WTD4oNY4'7&YP=U^SbT\hg\CEss7lBakP39r[J6Nl
QM?@4O8,XJchQl-rqZQ(s4[PBs7lBakP39r[J6NlQM?@4O8,XJchQo&qY9IWd/22bX8&(WSbTVf`V@:E
Wq_nTRJ<u\anX3W`q[.6[J7'&WVDqWNVJY2WVFd6m.gMBrrN0"q"=F=pq$6mpm_&]n&"k'pm_&Lpp^%Q
q"3DBq"=F=pq$6mpm_&]n&"k'pmV;TSbeoP\+n_Qo\KQBq"X%IbkSU@U\L/MMYN8-VteU5mJ-[ks8)fT
!:Ts_p\<hEaS<%8TD4WFM"m#*VteU5mJ-MPlM/X!XSAI`Xn^09htYk!\bMWhPQ6sCW;+R2hY?.+hY>n$
g\B4l_"ai&QM@!F\+n\PoD&=Rs7lTgnG(N.Xn\=ZTD61igA&M`T_kDWR/!]VdJ3/)rU9d]rqQ!XeG-0@
RJ<EL^[KnO_>'\uR/!]VdJ3/)rT=.Tp\NqOjQ-*Wpp'UdplkK/pl>-Ips8a&q#7i(gAp^Bq"OREprN68
pn.>Fpk\^*po!o5q!IkPq!.Y!poO7`poX>9pttl!ppp0gpltQPpriHhpuD/+ptYZ!psSrQrMTRkpm1]F
pp^%Pq"+:[n,N1^q!e(.poX=Zpn.>rn(RQQpn7DLpo=,:q!RqUn,N1^q="CRpsf)@pmLoLpqQ:Opqc`u
pmCiVpsJm)q#0@Tq"OREprN68pn.>Fpk\^*po!o5q!J([qu4/+gAp^Bq"OREprN68pn.>Fpk\^*po!o5
q!IkPq!.e%rQY,=pn7Daps&Tkpt5APpmUuBpo*u2ptkf+ptkf$ptPSlpqZ[&pm1]Fpp^%Pq"+:[n,N1^
q!e(.poX=Zpn.>rn(RQQpn7DLpo=,:q!RqUn,N1^q!e(.poX=Zpn.>rn(RQQpn7SQr0[8ZpsJm)q#0@T
q"OREprN68pn.>Fpk\^*po!o5q!IkU\c;I*irJQJq"a^Npt#5Zpp9ahplG33po!o5q!IkPq!Ik,pq?I3
pr3$eq!Ik8pqQToplkcVq5=#5q!%8@q"=FOpu(qdpo!nVpo=,3puqMLk5Y5Sq!7^upndbOpn[].n*'Pj
r2'@gpm1]Npr`Bsq#'U\q#'pQpriH/pm1]Npri-iprrN0pm1]Npr`Bsq#':Sq"a^Npt#5Zpp9ahplG33
po!o5q!IkU\c:Can,N1Yq!7_+pr*9?Zhh$'U%j]DOSGaKchQo&q=s@PebHiQ\+mr;iV;g8iV:1_SG8?D
VteR4l0n?@p%\%Oi:t:gVuEUhS+s#Yb4t2qqW@hQr:oUQbP7q/QM@9NbO=ZibkS%0QM@9Nb4t8sr9s[\
r:oRXbPB?VV>-AOV"i.%kkNBsV>-AOV"i+-lM1;>s7lEblhK'+`V?e7U%j]DOSGaKchQo*rr)i,s4[PB
s7lEblhK'+`V?e7U%j]DOSGaKchQo&q=s@ReH+4Npq?I3pr3$eq!Ik8pqQTopltQOps/[!n+QPLq!e(:
pr3$+pm_&Ypr`Bqq"j.Qq"t0Ylh]rBbP7q/QM@9NbO=ZibkS%0QM@9Nb4t8sr9s[\r:oUQbP7q/QM@9N
bO=ZibkS%3QN!3FV"i+-lM1;>s7lEblhK'+`V?e7U%j]DOSGaKchQo&rji('!9F4Ls7lQfpA"%MiqUjp
ZhTm^P5(sMchQo&qtTjZkkNs.g%aOpn+bZ4\G2KeQ2[l^XSC<?nG*"Xs7lTgoD%)8]'l?f]D11Vo_AFJ
s7lKdkP3'lT_OfIVteU,m.es(VZE]npm1]Jpr3$kq"jIZq"sjLpr<*%pm(WPps8EqpsAf6pm1]Jpr3$k
q"j.Qq#1!]!U]:NmJ,]9chOjAQhZa=VteU5mJ-[ks4[PBs7lQfpA"%Mir.4$chOjAQhZa=VteU5mJ-SR
p%[bGh"]RtiU?71g\A;RRJ<'BXSC<?nG*"Xs7lTgoD%)8](r&oU%l7ph"^O:roX7UqtT@L`qZ5%Q2%9P
cgU5qd.jO6QM@-J`VAWkqX=IZqtT@R`r!dNT_OfIVteU,m.es&VtcSQT_QM$kP4o9s7lQfpA"%MiqUjp
ZhTm^P5(sMchQo(rW3#t\c:Can,N1]q"FLMpu;(ppp9a^plbEMps8a&q"sjZpuqM.pt>H$n*g&+ppg*e
pm(WUpsf*.q#:'gq#:'[ptPSTn"KNgptYZ:q#9FUq"t$Qr9*jppn7DIpo!o5n*Khrpo!nQpn7E$puhGK
n,N1[puhFlpn7DIpo!o5n*Khrpo!qR!1*DQpr3$kq"j.Qq#1!]q!Ik9ps8`Apm:c=po!o5q!IkU\c;=&
k5aZEq#1!bq"+:<pqHNnpltQOps8a&q#1!cq"ORTq"!nFpu_@ppo=+Spm_2jrO;RWq"=+Uq"jdLprW<1
pm_&YpriHtq"rnIq"a^Hpqlftpm(WQpsJQupsSr:pm(WGpqlgfq"aCYq"a^Hpqlftpm(WQpsJQupsSr:
pm(WGpqlgfq"`bGq#10gr;69\pttk\pmh,Dpo!o5q!IkU\c:Cak5Y5Tq"sjXqqqD1pqHNnpltQOps8a&
q#1!cq"ORTq"!nFpu_@ppo=+Spm_&fptYZ;n,N1ZpuqLppo4%X!35jppriHtq"rnIq"a^Hpqlftpm(WQ
psJQupsSr:pm(WGpqlgfq"aCYq"a^Hr5/ELpn%8Gpo*u8n*]u!po4%Rpn%8tpuV;Hh>d9Kq"sjXpttk\
pmh,Dpo!o5q!IkU\c:Cak5Y5Tq"sjXpttk\pmh,Dpo!o5q!IkTq#'p]!V>pZoD%nFoD%JCbP8+4Q2$jD
\+nbRp$_qUqY9:LanVk1S+s#YbP:Atqq_;Iq>9:QjnQ^fT(nTGW;+d/meG6*WVDbRT(p1tjnSZ?s7lEb
jnQ^fT(nTGW;+d/meG6*WVD_YT)"uQ_YE6fq;))GrV69boD%5<^A+5nPk_0OchQo&rji(#!9jL5s7lEb
jnQ^fT(nQFVteU5mJ-\Cs7lQfp\=%KdeL3ESG8HGW;=R9aN4/?q"a^bq#:'[ptPSRn"'6_ptGN7q#9+L
q"a^GpqZZqpm(WRpsSX"ps]#;!L8rHQ2$pF_"d!cq="@Yq=s%G_"aJqQ2%?RddQZ"e+fp;Q2$pF_"d!c
q9K$>s7lEbjnQ^fT(nQFVteU5mJ-[ks4[P's7lEcjT+E;_YB_tPk_0OchQo&roX7UrV6-^lM/g&[.p0d
Qh[NSaS=uoq=t!brqQ*[g\A;ISc6+q\+n\PoD&=@s7lEbjS6OcSbSKFWVFp1n+bB,WVDbRSbU"qjS8Q>
s7lEbjSHXm^qf`9pm(WRpsSX"ps]#;pm(WFpqZ[cq"`,5q"a^HpqlftpltQOps8a&q#1<os1A<c!7_&D
q=s(H_YB_tPk_0OchQo&rp0U^s7lQfp\=%KdeL3ESG8HGW;+I/kkOuKs7lTgoD%)8\F6!`\+n\PoD&=@
s7lEcj8e99_"aJqQ2%?RddQZ"e+fp;Q2$pF_"d!cq="@Yq=s%G_"aJqQ2%?RddQZ"e+fp;Q2[?OSbU"q
jS8Pos7lEbjnQ^fT(nQFVteU5mJ-[ks7$*T!7_&Dq=s(H_YB_tPk_0OchQo&rpTm^rqQ9`lM/g&[eQNj
Qh[?N^A-LYoD&:Zs7lKdlhJ^!WVDkUU\Mh'k4nf&s7lEbj7pFbSG8BEWVFs2n+bB,WVr+[Q2$mE_"csb
q="@Yq=s"F_"aGpQ2%?Re*lc#e+fp;Q2$mE_"csbq98j=s7lEbjnQ^fT(nQFVteU5mJ-[ks4[P's7lEb
jT*0n_YB_tPk_0OchQo&rpTm^rqQ9`lM/g&[eQNjQh[?N^A-LYoD&:Zs7lKdlhJ^!WVDkUU\r+0`VATj
qUGQ?q=s"F_"aGpQ2%?Re*lc#e+fp;Q2$mE_"csbq="@Yq=s"F_"aGpQ2%?Re*lc#e+fp;Q2$mE_"csb
q9/g5q=s(H_YB_tPk_0OchQo&rr)l1s4[P's7lEbjnQ^fT(nQFVteU5mJ-\Ls82fprqQ9`lM/g&[eQNj
Qh[?N^A-LYoD&:Zs7lKdlhJ^!WVDkUU\Mh'k4nf&s7lEbirHmj_"aGpQ2%?Re*lc#e+fp;Q2$mE_"csb
q="@Yq=s"F_"aGpQ2%?Re*lc#e+fp;Q2I0NSG9npj7rGns7lEbjnQ^fT(nQFVteU5mJ-[ks6fsT!7_&D
q=s(H_YB_tPk_0OchQo&rpTm^q=s7Me+gBHT_OoLU\MIrfD+b7qtp6en,N1Wpu(q\pn%8JpoaD@q!\"V
eGo=>puM4dpmq2Fpo4&;n*g&"po4.Urg!8Lpqcadq"aCYq"a^Gpqc`rpm(WRps\^#psSr:pm(WFpqcad
q"`,5!;ZHdpuV:fpn%8Fpo!o5q!IkU\c:CaeGo=>puVLlqni-"pltQOps8a&q#9a^q"a^Mps]#Hpn7DL
pnRVrpt,</q"sO[q"ORApq?HopmCiZqU5Joe+iD,rRClBq=s%G_>'SrQ2%?Re*lc#deKg:Q2$pF_>**d
q="@Yq=s%G_#^*tqORDHpo4&;n*g&"po4%Rpmq2rpuM5GbQ%A5puV:fpn%8Fpo!o5q!IkUqu=G2gAob'
q"a^HpqlftpltQOps8a&q#9a^q=t$dq!.Y'ppTsjpmCiOpq-=Qq!RqSn,N1Wpu(q\pn%8JpoaD@q!\"V
eGo=>puMFjqn`&upm(WRps\^#psSr:pm(WFpqcadq"aCYq"a^Gpqc`rpm(WRps\^#psSr:pm(]H!M,eV
_>**dq9/g5q=s(H_YB_tPk_0OchQo&rji'r!:Kp;s7lEbjnQ^fT(nQFVteU5mJ-\Us7lKdmeG?-\G2`l
R/!HO]D0tPmJ-PVs7?9crqQ!XebH?CQh['F\bP%Vp<3L2qY91I_t]l!Q2%<QdeN8*mJ,*(W;2\YQ2%!H
_t`?gqX=IZqY91I_t]l!Q2%<QdeN8*mJ,*(W;)YQTD6>!jnS\qs8Mikq=s(H_YB_tPk_0OchQo&rji'`
!7_&Dq=s(L_Yq@HT(nQFVteU5mJ-\Us7lKdmeG?-\G2`lR/!HO]D0tPmJ-PHs7lTgnG(Q/YP=IZS+sPh
hY?ffs7lHcjnQagTD4]HW;+g9meH2EdJ0[8Q2%!H_t`?gqX=IZqY91I_u65*TD4]HW;+g9meH2EdJ0[8
Q2%!H_t`?gqTJp6q=s(H_YB_tPk_0OchQo&rqZT1s4[P's7lEbjnQ^fT(nQFVteU5mJ-\Us7lKdmJtf5
ebHZLT_OoLU\MIrf(eY-qX=IZrqQ!XebH?CQh['F\bP%Vp<3L2qY91M_u7LJTD4]HW;+g9meH2EdJ0[8
Q2%!H_t`?gqX=IZqY91I_t]l!Q2%<QdeN8*mJ,*(W;)YQTD6>!jnS\qs7lEbjnQ^fT(nQFVteU5mJ-[k
s6B[T!7_&Dq=s(H_YB_tPk_0OchQo&rqQHeoD%,9^%e>sQh[<M]D1"QmJ-PQrql`gs7lKdl1iBqV"g2L
U%lV%k4nfAs7lNeq="%Po_@PC`qZ8&QM@BQcgU2pcM4:3Q2mZTUA2b'jnSK:pA":TjnQjjU%jrKVteU,
lhJd#VYHJPUA2b'jnSK:pA"IYr9s[`q>L-ajnQ^fT(nQFVteU5mJ-[ks4[P's7lEbjncgp_SZ)>pltQO
ps8a&q#:'eq"+:9pq?Hspm:cMpq-=Qq!IkQq#9a^q"sjNprW<,pltQIpr3$j!W)ZhqX=IZr:p*VpA":T
jnQjjU%jrKVteU,lhJd#VYHJPUA2b'jnSK:pA":TjnQjmU&Lb\QM@BQcgU2pcM4:3QM@3L`q\Zjo^DMK
q=smVs7lEbjnQ^fT(nQFVteU5mJ-\Ts24lk!7_&Dq=s(H_YB_tPk_0OchQo&rqQHeoD%,?^&,M<UA1)M
UA2@qfD+b.qY:'Ys7lKdl1iBqV"g2LU%lV%k4nfAs7lNeq="%Po_@PE`W=*!pn@JKpo!o5n*BbopnmhP
pnIQ'puV;Cn+QPKpuV:jpn@JKpo!o5n*BbopnmhPpn@f/`qm^MjnSK:pA"IYr9s[\q=s(H_YB_tPk_0O
chQo&rji'n!:p3?s7lEbjnQ^fT(nQFVteU5mJ-YTq=s1KanVe/Pk^U?Y5$07iqW!;o_A1VqZ-NgrV6-^
iV:+]SG8?DW;+^6mJ-YTs7lQfpA!qAiV;R1iV:OiVYHMQV"i(,jnRp3aS;P*Qi<o[VteI1iqV^*iV;R1
iV:OiVYHMQV"i(,jnRp3aS;P*Qh[KRbP:)lkO7C)lM1)JrV6Ehq#U<epuV:fpn%8Fpo!o5q!IkU\c:Ca
eGo=>puV:fpn%8Fpo!o5q!IkTq"a^KprW</pltQ?poaD7pu;);q"4@Uq"sjbq"ORBpq?HmpltQPps8a&
rVcZmq#C-fq"FLJn)='(pu2"ipnmhQpn[],puV;3prN6*pm:cRpriHlpuh,)pu_A1prW?/!2fOXpn[],
puV;3prN6*pm:cRpriHlpuh,)q!.YJq#1!fq"a^HpqlftpltQOps8a&q#9sd`W+ZmeGo=>puV:fpn%8F
po!o5q!IkTq"a^KprWH3rMTFTpm:cYpr`Bkq!\"Mq"OR\q#1!^pu2"]pmh,Dpo*u6q!IkTq#C-fq"FLJ
n)='(pu2"ipnmhQpn[],puV;3prN6*pm:cRpriHlpuh,)pu_A1prW<.pm:cOprW<mpuM4kpnRVNpo")6
r6+lppuh,)q!.YJq#1!fq"a^HpqlftpltQOps8a&q#7i(k5b/TeGo=>puV:fpn%8Fpo!o5q!IkSq"4@9
pp^$cpl5'8pojJ4pso/nptkf,q!S4Xq=saUpt>GJn!<aQpt5B4n,N1Zq!7_(n%neIptYYjpoaC[pn%8m
n'h'Cpn%8Lr3?4*psJlmpsSWIpsSrmps8`<pmLoKpq-"Dpq$6lpmUu_psJlmpsSWIps]$(q"jdcq"a^H
pqlftpltQOps8a&q#7i(gAob'q"a^Hpqd''T),&RPk_0OchQo&r:opZg\A8QR.u[9Qh[cZ`q\*ZgA'P"
jS83=q"XFTg%_lAQM@]Zf_G%7s7QEeqY9COe*k-JdeMVmchO[<RJ<BK]C45D](hllReX/_dJ2PmddP$I
deMVmchOXCRJE9GT(oqde+gNLT(ncLZ1u`Ah>#Fe_>)LSlhL>Os7lEbjnQ^fT(nQFVteU5mJ-\Ps2Y/o
!7_&Dq=s(H_YB_tPk_0OchQo&r:opZg\A8SQiWSApl5'8pojJ4pso/nptkf,q!\"Qq""45pp0@SposPG
q"!nRq"jdOps\]JpsSrmps/uDY55<rRJ<BK]C45D](hllReX/_dJ2PmddP$IdeMVmchO[<RJ<BK]C45D
](hllReX/bdJhPgh>#Fe_>)LSlhL>Os7lEbjnQ^fT(nQFVteU5mJ-[ks5a7T!7_&Dq=s(H_YB_tPk_0O
chQo&qtTRRd.jX9O8+M*OSGICX8'!qZhV*+a8"Kin,)SKm.f$(Wq_eQR/"2dhY?g5s7lBaj7pO\WqaI+
gA'=q^%e>sReWlW\bN]0W;)kWV#%n._85TppquR#pqlg[pt5ATpnIPPpo4&!ppg*tpm_&SpqcFRpquR#
pqumeq"XXaq"XsPjne*6_YB_tPk_0OchQo&rji'`!7_&Dq=s(H_Yp)(T(nQFVteU5mJ-SRmJ,''Wq_YM
L\Qu+TD5J^ZM:d$\bO5?h>$I6m.f$(Wq_eQR/"2dhY?g?s7cQgq"WnE_saW#_YDj[f_E/TUA12PWVF%!
\G3#tS+rfS_=-.R_saW#_YDj[f_E/ZUAL\[ReWlW\bN]0W;)kWV"hdpg\A\TWqaL,j7rEEs7lEbjnQ^f
T(nQFVteU5mJ-\Ns2k;q!7_&Dq=s(H_YB_tPk_0OchQo&qtTRRd.jX9O8+M*OSGICX8'!qZhV*+a8"Kc
n+c8EdeKj;PPCO?\G4qUp@&%Vq"WnE_saW#_YDj[f_rM]^%e>sReWlW\bN]0W;)kWV"hdpg\A\TWqaI+
gA'=q^%e>sReWlW\bN]0W;)kWV"he%g\9It_saW#_t`9eq"Xmaq=s(H_YB_tPk_0OchQo&rji'h!;QWE
s7lHckkN9pWVE.]YkZ`Cn+cbSlhJd#Xn\:YOnb7;SG8cGUA1__](jkSli$/ElM/g&YP=^aVte7+jnSZ?
s7lBaj7pL[WVF@*hY?1,dJ1-EV"g_RVtd%^VYI^sf(eG'htY(WWVF@*hY?1,dJ1-EV"g_RVtd%^VYI^s
f(eG'htY(WWVF@*j7rEEs7lHhkksZ>anVk1T_PbdeG/M-rji'`!7_&DqY9:Lanr(:WVE.]YkZ`Cn+cbS
lhJd#Xn\:YOnb7;SG8cGUA1__](jkOlhKc?deL$@T(o5Y`VAQiq=jpbs7lBaj7pL[WVF@*hY?1,dJ1-E
V"g_RVtd%^VYI^sf(eG'htY(WWVF@*hY?1,dJUEN[J6QmU[P,UU\L_]\bObNkP3s0_XFK!_YE0dq"Xma
qY9:LanVk1T_PbdeG/M-rpTm1s*t
~> 0 47 m 0 0 l 300 0 l 300 47 l h W n EOD
gAob'q"jdLprW<1pn7Ddpsf*-q"jdOps/Z:pmCi=pm1]Fpn7)M!NE'pWVF("f(eS+lM/g&YP=^aVte7+
jnSZ?s7lBaj7pL[WVF@*hY?1,dJ1-EV"g_RVu*7gU\L_]\bObNkP3s0_XFK!_YE!_jS7-t[J6QmU[P,U
U\L_]\bObNkP3s0_XFK!_YE-kq"a^[s7lHckkN9pWVE.]YkZ`Cn+cmms4[P's8MllqY9:LanVk1T_Pbd
eG/M-qY9COcM4O:R.ug=QM@!FT^SWMWVF("f(eS+lM/g&YP=^aVu"@5`PqW6q"aCYq"XXEpqlL!pqlg_
puM4tppKmmpnR;UpnRV]ppp1NpuhG0pqlL!pqd'ghYQ+(jS7-t[J6QmU[P,UU\L_]\bObNkP3s0_XFK!
_YE0dq"XmaqY9:LanVk1T_PbdeGJ_6n+cmms4[P's7lKdmeGE/^\G>6`;&6boD&1Xmf;hOf_E5VYkY9o
XRE:[Y5#C!_t`!TmJ,E1_>(J6^\HFUmeH_Ks7lHclM/cq^AcOWdJ2r#nG)/@dJ1HNZgY*mZhV<1eG/>(
o(_JEdI4gEdJ2r#nG)/@dJ1HNZgY*mZhhE;^VBQnq!.YFq!%S$n%SSEq!.YNq#C-dq!Rq/pqQU6pr)sb
q"+:[\c2[1!8RY)s7lKdmeGE/^\G>6`;&6boD&1Wn+bQ1^\G&.X8&dbXm`Fk[/@<+_t`!TmJ,E1_>(J6
^\HFUmeH_Ks7lHclM/cq^A-+NkkOZBk4m@!^A,&'YPGL)ZhV<1eG/>(o(_JEdI4gEdJ2r#nG)/@dJ1HN
ZgY*mZhV<1eG/>(o(_JEdI4gEdJ3#+qYU-as7lKdmeGE/^\G>6`;&6boD&<qs4[P's8;cmqtTUSfD*,U
\G4#;htZg<qY9OSf_E5VYkY9oXRE:[Y5#C!_t`!TmJ,E1_>(J6^\HFUmeH_Ks7lHclM/cq^A-+NkkOZB
k4m@!^A,&'YP>I!^\H=RlM0rFl1iZp^A-+SkksZ>nG)/@dJ1HNZgY*mZhV<1eG/>(o(_JEdI4gEdJ3#%
qY:*cqtTUSfD*,U\G4#;htcjDoD&<qs4[P's7lTgp\=(LhtZ"%iqW!;qY:$apAjOTlhKB4fZVh?f_FD"
mI0cDm.fN6g\B_%m.g>MrpTm^rV6'\kjRF,kl'`?o_A:XpA!tKhtYajd.l/di:u^7q"Xa]p%[b>htZF1
o_A:XpA!tKhtYajd.l/di:u^7q"Xa]p%[b>htZF1p%\L\s7lTgp\=(LhtZ"%iqW!;qQU"u!8de+s7lTg
p\=(LhtZ"%iqW!;qY:$ap\=(LhtYjIebe"uf_FD"mI0cDm.fN6g\B_%m.g>MrpTm^rV6'\kjRF(kkOfF
qY9dZlhKB4eaLl[eH"P'i:u^7q"Xa]p%[b>htZF1o_A:XpA!tKhtYajd.l/di:u^7q"Xa]p%[b>htZF1
p&+derV6EfrqQ6_lhKB4h"]n(n+ca`s4[P's8)]qrr2]eq!7_4ptYZ(q!\"Sq#1!^q!7_4pt3d?pt5B"
q!IPDq!@e6ptPT%q!8%Up\OXZrpTm^rV6'\kjRF(kkOfFqY9dZlhKB4eaLl[ebJ(tmJ-JOqtTjZkjRF(
kkk#Oo_A:XpA!tKhtYajd.l/di:u^7q"Xa]p%[b>htZF1p%\L\s7lTgp\=(LhtZ"%iqW!;q>gQ#s4[Os
s7lQfq=sXXo_A.TqY:'bs7lQlq>:!_otp:poD&"Rq="7Vq=sXXo_A+Sq=spEs7lNeq![nPp]:0bq#'U[
q"jdZq!mh@q!n.Qq"sOZq#'p^n+HJNq#'U[q"jdZq!mh@q!n.Q!W2cjqsXOZr:p'Up%\=Wr9"%SrV63`
p%\1SpA"LZrilG"!9!q$s7lQfq=sXXo_A.TqY:'bs7lQfq=sX"o(hkWoD&"Rq="7Vq=sXXo_A+Sq=spE
s7lNeq![nNq"XdUrqQ?bpA"1HmeH>OpA=RYqsXOZr:p'Up%\=Wr9sX[qY9dZnaGo@nbDhQqsXOZr:p'U
p%\=Wr;-H\s7lQfq=sXXo_A.TqY:&os4[Oss7lQfq=sXXo_A.TqY:'bs7lQfq=sX"o(_hOp%\@Or:p*_
p%\1Sp%\@]rVZWMs7lNeq![nNq"XdUrqQ?bpA"1HmeH>IpA"ORrqQEdq![nNq"agfr9sX[qY9dZnaGo@
nbDhQqsXOZr:p'Up%\=Wr9"%SrV63`p%\1SpA"LZrr2r(s4[O)s7QDCs+13ns5s<3s8)cXrq-5As,$dO
!94'1s.B=Bs.TJTrqueIrrN0"k5LtPJcFX-gAo@qJcC<$JcGKEk5M7Xec4e2JcEgk[K"t]JcG?AJcC<$
JcC<$JcCZ.pAj:TJcD;@JcC<$JcC<$JcF^/gAo:oJcC<$JcC<$JcC<$\,Y1_JcG9?JcC<$JcC<$JcC`0
o`4.TJcD5>JcC<$JcC<$JcFd1gAo4mJcC<$JcC<$JcC<$\c:CaJcG3=JcC<$JcC<$JcCf2o)S"TJcD/<
JcC<$JcC<$JcFj3gAo.kJcC<$JcC<$JcC<$]DpUcJcG-;JcC<$JcC<$JcCl4nGqkTJcD):JcC<$JcC<$
JcFp5gAo(iJcC<$JcC<$JcC<$^&QgeJcG'9JcC<$JcC<$JcCr6mf;_TJcD#8JcC<$JcC<$JcG!7gAo"g
JcC<$JcC<$JcC<$^]3$gJcG!7JcC<$JcC<$JcD#8m/ZSTJcCr6JcC<$JcC<$JcG'9gAnqeJcC<$JcC<$
JcC<$_>i6iJcFp5JcC<$JcC<$JcD):lN$GTJcCl4JcC<$JcC<$JcG-;gAnkcJcC<$JcC<$JcC<$_uJHk
JcFj3JcC<$JcC<$JcD/<klC;TJcCf2JcC<$JcC<$JcG3=gAneaJcC<$JcC<$JcC<$`W+ZmJcFd1JcC<$
JcC<$JcD5>k5b/TJcC`0JcC<$JcC<$JcG9?gAn__JcC<$JcC<$JcC<$a8aloJcF^/JcC<$JcC<$JcD;@
jT,#TJcCZ.JcC<$JcC<$JcG?AgAnY]JcC<$JcC<$JcC<$aoC)qJcFX-JcC<$JcC<$JcDABirJlTJcCT,
JcC<$JcC<$JcGECgAnS[JcC<$JcC<$JcC<$bQ!(
~> 0 47 m 0 46 l 300 46 l 300 47 l h W n EOD
gAlg)VuM>JJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcEpnJ,
~> restore
Q
/Cs2 SC
0.35686001 0.52941 0.94902003 sc
q
0 0 m
100 0 l
100 54.007996 l
0 54.007996 l
h
0 0 m
W
0 0 100 54.007996 rc
1 0 0 -1 -648.76599 240.48 cm
/F1.1[ 25 0 0 -25 0 0]sf
652.25397 223.78 m
(!"#$%$%$!)[ 12.000000 12.000000 12.000000 6.000000 12.000000 6.000000 12.000000 6.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
