%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 120.959996 120.959996
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 121 121
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 121 121
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /b put
dup 34 /r put
dup 35 /e put
dup 36 /t put
dup 37 /space put
dup 38 /j put
dup 39 /o put
dup 40 /d put
dup 41 /a put
dup 42 /n put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/space 1 def
/a 2 def
/b 3 def
/d 4 def
/e 5 def
/j 6 def
/n 7 def
/o 8 def
/r 9 def
/t 10 def
/uni2B91 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B64DFC330C1264D9E86DB21FFDE360EA73793134E310C35764956599F33D100A43A4E3DEAEEC09ED860F76048E234C00CF4055CF671E0F66D4F89095ECECEF7393056FEE33F2F50AB369B1E9721F25FD87A548E414D0D8E221ED1CCE41CC350E7F3E45A529AF0A8CA530C4E3E6E5A7F1290FD29A588100688C2131F50611D4482B8FB6D3993A9722C7BB32235BC2E732597B211053E21FEC3028CC773132054CA4530164B5091EB61C8326C7C4B3D21E3BFCC0981BF67EE7B2C3189C3EA48AB4BBC7552E62486899190566F0E9130B940F1A1004896835F9EABC01F1092194A5556C449386CF2C7681BFFADE9E05AC338079F7E238F81DDC5D977B92313ACAD63D1156BC9070391A9A844DCC997B86B52859528CBB9B59E0C24AC483ABD1B0F9E2E47B849DE51ED99D8965A5C0539507257A00485D95ECF7C008788C6EEAB49B700D6B00F07A5A6C8A6FA2DF8E5FE8742B2B1764C16FB4D3D3F5FE6BF404E69A9F9415BE43C3F84A0320A154C08E3B8008842C4664DEE75A82299D86114BE0A18F65D90EBF6789A525DE530C0D92E954078088B92AF6F21B44180C742CD3EA30F8D9A9495AB2F9A941B40B1C2DCDADEB7BB6CC0650B934094F1CBE8D43D5C5D37DF4C7276B343206C74A018AC9CC63E50AC24F5C87B6D1242DB53013168269314573563A2D1437AC8BEFC93AEAB00E4F62DD8848804DC8E880D19D96E9A887B461A6BDECA5817CD2266759FD9BD5C0BB0E477203DDBEE3341B23921C86E468EC
6DDBFD643819B7E91A0E0B4DC00F0AE7C8F2EE12D0CE555EF319B9CFF33D9EE41EEDBB07A6AAB57DAB57CD1FD8A7B2A64EFA87DFD0F2C246322D661370BA5356CE2CE8BF42C3D1229AB58782D4915A30EA83D098551592360A3838A2CA4C7CB845158A9E74371DA0729F8FD546298BA39BD6526C13CA12A33BF0E562E7AA92ACF8CA64B059560ECBD7009F907F0D96F9E11018D365571B19274EAC2ECE70DC89275100DED4F710A2666B726B8147C84E621870426A3DEB395754FBE19636B0BCD3537F4BA24B23A3F506C91C78FCCFA8CB73745FC132CD40C8CF72506D4F953891D53E4D2473C00BF4380550F335E9564298F9D2237D4DACF3D26F89C0D65DDE9031D8863DE01AC0453D0C330D6BD7A433FCC4F7EA2096652710F83F2868E10F855F07152A2DFA3337D98C0781660A4EF5B8AFE0A9ED825E686B3E65D2AB0861E2C735B53A93F70F21C74DB9D289159C37933A99E5D3F5F1C54B6B4B6813BEDF6943983CE62F0A1D117EFC581FFCC47351147EAEF65C9AD3917A7B002DDD2E42A575F472DFB2F170B4099E167FC9DB88BF2FD7D36D42C2E02377BB2607AD2CA3D325B9603C4C348F9BF26FA8B1BB67061C8AC184B721E3D0558E496A98A31D230EF96E5CC1DB8E354F9F6F283678DEEC185FC40C6F38A2B22429E327707470CB0601D5BE681374E9740E7EEB112EA89B0AC0E3B51D6C964C637DA824186BA4EEB30ECDE66777EEB4D3E958D05323B8AA6ADC8EFEAB9036F5810E1110677475B45C45708E77209812B2225A956A30C7CBF2206F9C4261F0710E3621B6C8A2CD8171F054A5B03BC9CFC504457C6208B84EF8D751D0E561C2B9EA2C37C7205E507620C85D1D4704AF913A86849C71AA9D57C6F28F42D1527118FEFCC970807B136BCF6C15196AB1A7A6D144494672871FA5846124386C2737A7778099B2A1E0E974041EB7698D28DADE48D9ADAD431810016C0540AFCFD1AA06B20D86459658BECCC1EFD08A80DB4E64B563471FE568C01BE5EAC20594378F61EEF3D3FFFB30AC85EC78E87216BBE9DB823E9BB064A026809001C8A730EA2B2D24C13A1706BE63BD38D131A0E811471F7E01B52721EBDC6AEB261C3CE12DC339A623368F85CB19FAB9415FBCAF8E68C32EADB8A5E2B82A620A138F2F58ECDC44B9CF889D209D7B6526EA34832440459F3832E11CAA167031CC0FBF8EBB5A01A88DB12B203E6559ADB2DEA970F21FE4CC1A011384CD4991CE3B6BED24D609265F1D34708748167CFE2028D7266F55C3428753E4A8A9684E8217F4AF247F7EAA32DC3A11E3A91F2CCE786AE1BD851E19045349954E226B67E029A6A755E7BFEB86E3F63A4DF74D895AC295B44D8EBDB3695CDEB6F9563D1DFC3C53FF0FB23F651D9E6C13216FD468237692802EF908982CCA4C2C449341229E1733C7F80C0744775C378D957797CA62
C90615FD67ADF8DC02D4BBD6CDBC8B703BE302F81CA05704F28932CD738342D893964E8E6BC01F51F4DE0CA33EFA8AEFA54E7541E9E2161359C74D173360EBEF899E0AF21654F861ACEABD7E7A2F84862E0E4592544F3E1D74A98A52693BCA92013C14B79332A5934C90021A77E8C2983B83D4D213B676AC591AFA5007D085F5F0C4081B8CC7A64E3732668704F54DC7C6C84F7C18B325FB4BB3255436D618C5783C261037FDB512872A82E3A43650B2325CF9DB374710D6F8BD86FBD832DA3BE94F9652B32DBA9AC0FEE2F383E74822CAD8D68FE7C51DDF751455D189FF90365D67E6969C1A46E13E6CB119855CF35C9E0C44EB0F68737B8F77AA3CA8E8E0CB921710337D99F3E3EF3C422D2041780818443ADDAB2B3FEFDAFD77FE88FDDA2A585E8B8484A7C01C0EADDFC69C6C027EEF7EE080762B18C85543FFE5E90E226086B6A19BD416BA4E1D2E2E01073730D6816908498114CCCFB881A615FA42F29A0B92AD1E15E460F60022CAC1639DB0EB70CF049BFF2D86483AB24CF540DE986BE69372E572AA37FFB9A0FDD763ACD699110D01042D079B80119BA93939266A5B31F92A653E8418C9F4F2FF02FE72ECF8EDC9BFF93F019AE44E58723699E039EE8F63F5FB88AB14160A5A9F1CB010876B5ED90421327C4F904A2E588E7015C98640D3216B1E4EC27C6137C9D291E2F5CDA53F682FE6684EC7B7887B274A3B97B1DB8E4537E76E085B591A188B7C4B45BD3DF715E4AF90493958C4104BD9442C30CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 120.96 120.96 rc
119 0 0 119 1 1 cm
save
1071 45 cg_miaiproc 
322 -35 -28{
gsave 1 357 div 1 357 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
357 36 scale
BI
/Width 357
/Height 36
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 35 m 0 0 l 357 0 l 357 35 l h W n EOD
JcC<$JcC<$JcC<$JcC<$V>o$FMZ88-JcC<$JcC<$JcC<$aoBijk5U#4JcC<$JcC<$JcC<$JcG-;e,Y("
_Z,2eJcC<$JcC<$JcCl4e,Z*?JcC<$JcC<$JcC<$JcE.Xe,]@FJcC<$JcC<$JcC<$JcC<$g&KP%JcF=$
JcC<$JcC<$JcC<$JcG]Ke,ZfSJcC<$JcC<$JcC<$JcDGDi;iKMJcCc1JcC<$JcC<$JcC<$`W+EfJcG$8
JcC<$JcC<$JcC<$JcG!7e,[MgJcC<$JcC<$JcC<$JcC`0o`3nMJcDJEJcC<$JcC<$JcC<$Z2`;RJcG`L
JcC<$JcC<$JcC<$JcF:#e,\5&JcC<$JcC<$JcC<$JcC<$q>\qEJcE1YJcC<$JcC<$JcC<$Sc@1>P5g+5
JcC<$JcC<$JcC<$_>i!bmf.k<JcC<$JcC<$JcC<$JcFj3e,Y("b5[%mJcEXfrr)iirpKdKroF(;rnm_2
rn@A(rmq(urmq)$rnIG.rnm_7roF(BrpTj\rr.TNJcC<$M>u'*VZ25IJcCH(rql]_ro3q.rlY5SrjDa.
rhf[e]UJhmrhoaurjDa?rlkAnroF(JrqucqJcC<$JcDkPeGoRLJcC?%JcEIarr2odrnm_#rk8<6rhA)7
W1*^\ric=9rm:Z'rpkX?m/MY:JcF-te,Y("hZ&0,JcG9?rql]Wrm:YZriZ6lJXYA_rh'1nrk\T_rosF[
gAca(JcC<$p&EMA])R?]JcDGDrpTj>rkn`;rg\P.n=%[lrg`tkrl4rmrpkX?_Z,2eRK)LOli;V:QN)O9
dJs47rm^qWrh7#oJXYYgrhKJ)rn%/?WrIYMJcEF`e,Y("o)F:@JcG`CrnIFfrhY17NLKd6ri#h6rnm_N
JcCo5JcF^/e,[eoJcC<$Y5eLgrltGErgSJ-i0p"$rg`tmrmC`8JcGKEJcCH(r;bIMJcDbMJcFL)rp'L)
ri*,jJXWd2riQ1ErpJSAJcC<$WW1HJLAui)M#[J=rl+r8!N)`FRY.'ORf9;cb5UdZs2"_ds3:Sn!94$0
s+13Xs8M]jd/L%rRb!pYRcU";Y5ZrMpnn(Bs+14?s3q%"s1\Mas5O(XrVkXP\,MkuRXpo[RK8tM!1j,%
ro3qVJcCZ.Q2f>6Rf@s=N;rnHrl+l1!LfI.RXpp!Rf9,^b5V$as6]i;s1/0Z!;?GDs+13Ys8M'X\,MkJ
RamjXR_5*gSGp2#kg09[s+14+s3q%"s3gpus5X.Yqu51GWi2A;RXppZRf9Mig]%/&s0VfWs3q%Os+130
s8M`kaSqn4RXpoYRXpq#Rf9,^cMmX*s+13Hs4m\M!.k0-s0r%-p&;u1Sq3?[RXpokRf8uZbl7D4s+13$
s2k;j!.k14s+14/s8MZi`;Z=-RXpoYR^&=\T`3+5pjrJ!s+14;s3q%cs+13.s8MWh_u?2,RXpoYRXppR
Rf8rYao;%Is+134s*t
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Y("Y5b-orq$-,rgeV/m$`KoJXYVfrh'23rqD!DW;i^oe,YC+JcEjlrqQK4rg^ioJXV.YJXZS1rltH>
MZ88-aoBijk5U#4JcG?Arr)iErh4n3R$rSpT:5bTrn6Q9JcC<$mJkZ9JcEUeRfEBCrhtC:m[A]qJXX9@
riQ1\JcEpnOoNo2T)XBA`;fi$risD1JXV.YJXY>^rjVmpXoEtP[K"_VqYu-HJcG0<rqQK/JXW$rJXV.Y
r0mVTrlG*9JcCf2g&KP%JcF=$Q2gj;rh=t4o9t6!JXW$rrhobSJcG0<JcG]Ke,ZfSJcELbrp]ooadRdL
JXV.Y\=3E/rq4Y<JcDGDi;iKMJcCc1l2Ub]rltG5JXW=%JXV.Yfp_o5rmcT"YQ)TAe,Y("lMltGrp0Q`
JXZA&JXV.YJXZ>%rilCkOoL"4l2T65`rCVi])Vd/rm(M5d@,WTJXV.YR%"#GrmpT=JcC`0o`3nMJcDJE
iW&oIrigsBVj`1*JXX$9rj_t$JcF0uZ2`;RJcG`LM#[J+rh"b1!1JJ-JXV.Yf:)]5rnk!\JcF:#e,\5&
JcE%Urq??$es_/YJXV.YJXZ8#rk\U1JcCr6q>\qEJcE1Yg&M'7rhP+6YF:$2JXVmnri5tcJcG<@Sc@1>
P5g+5!<<&Hrg\e5JXV.YJXX':rgs,DdJndt_>i!bmf.k<WrN(prk.*VJXV.YJXV.YeXHKVrr%EJZiB.e
e,Y("b5]lhrpKccJXX':JXV.YJXZ;$rilCoP5gC=e,ZBGJcGNFrnRLFOIC`hJXV.YQ^[oJroN\MJcDkP
eGoRLJcDDCrlaGmJXV.YJXV.Y\=3DermlZ#d/VMne,Y("hZ(^trr)i0JXX?BJXV.YJXY/Yrl;5BJcGEC
e,[)[JcG6>rqQJuR$rSpJXV.YJXZ>%rjr+,JcD_LklC&MJcDhOrp]ocnX>#tJXV.YJXVspric=pJcG6>
^&QR^JcG<@^An2qrh4n3b*mmMJXV.Y\XNMprpJ,4JcF^/e,[eoJcFj3rn[REURHb&JXV.YJXY;]rh08R
JcE%Ur;bIMJcE.Xrn7:@r0i2*JXV.YJXV.YqjRMUro9"<WW1HJLB"U[rmh";JXY,XJXV.YJXW*trgj&G
m/MY:c2Z8nir=T0gAh0!X."U.JXV.YJXX9@rg`uBJcEpnnc.)=JcEIarl]k]KURI\JXV.YhO=G5rmn+L
Q2f>6RfB>drl0MXh3rn`JXV.YJXZM*rm?;s_>i!bpA]^Dci=!`[[Mc9JXV.YJXW-urm?;skl9K=e,Y("
df9%@rlTe\O.(WgJXV.Y^7,&Pa8^_je,ZZOScA]8JXYekJXV.YJXV.YigTk9rnE#(b5^8tp],mFc2[dm
_4#qDJXV.YJXV4[rg`uFL&]9pe,Y("k5XcIrn7:?JXW-uJXV.YJXWC'rgj&KjSsf2mJkZ9_Z,f!rn[RC
JXZ;$JXV.YJXV.Y`L?dtro\k4e,Op
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Y("e,TF'rgVo9JXV.YJXV.YJXY8\rgs,PYQ(I!e,YC+c2[e)rg\P.]:+;>JXV.YJXZG(rh08YJcF=$
e,\Y2JcGBBrpTi[Pa[/lJXV.YJXW'srhf\gJcG-;mJkZ9JcFO*rqHDjm@&TpJXV.YJXV.Y]UJi'rqt"?
OoNo2T)Z\-rquc"JXXTIJXV.YJXV.Yh4">SJcFO*e,]@FJcFm4rk+klJXV.YJXV.YJXZS,rl9fog&KP%
JcFa0rlY#)JXV.YJXV.YJXW4"rmp63JcG]Ke,ZfS[/^-ZJXXuTJXV.YJXV.Y_j^RproJ_2jo=9>oDjIB
kl:YKrgp6\JXV.YJXV.YJXYYgrhBDaV#SF6e,Y("li-t\!VuQjW.CClRXpoYRXpo]Rf9Mkr;llqJcG'9
e,[MgVZ6Y+JXYJbJXV.YJXV.YVOIM'JcG'9o`3nMJcG0<rm80DJXV.YJXV.YJXXWJrnG0eZ2`;RJcG`L
o`+pPrg\P.Pa[/lJXV.YJXYnnrgs,WJcG9?e,\5&S,`K\rhG%5m@&TpJXV.YJXVOdri5toJcGZJq>\qE
JcGBBrjBb7JXV.YJXV.YJXW^0rk[7eSc@1>P5j\ErmQFeT:1>"JXV.YJXXlQrni;,p]&_Cmf/:HrpKcW
JXZJ)JXV.YJXV.YJXZ.urhBDcQN-(He,Y("rVulqriXb>JXV.YJXV.YJXVdkrj_P!M>u'*VZ5<KrlTe\
XdXg0JXV.YJXWs7rmlZ#rVtCJ!!%TM!<<&^rgSb5JXV.YJXV.YJXY5[rgs,YYlE,Ne,Y.$rql\nigPFe
JXV.YJXV.YJXZD'rigtR!<:OK])TqQrlBYZ]:+;>JXV.YJXW$rrmcZ$klC&MLB%8?rg]=DJXV.YJXV.Y
JXX<Arh08`b5]0Te,Y7'rikm\JXV.YJXV.YJXV.YhjXPVLB#a'cMtQWrmcRgadRdLJXV.YJXV.Y!1NoG
M?!MSfDpm1rq?>aV4)t(JXV.YJXV.YUmh:[rqkdVWW1HJN;rmirgJD,JXV.YJXV.YJXXQHrlC&ue,\M.
Y5eL^JXY2ZJXV.YJXV.YJXYhlrg`uUTE"H]e,YR0riEGpJXV.YJXV.YJXVIbrjVe)Q2f>6RfE3`rn)dj
N1,<dJXV.YJXWX.roB7Be,]4BT`>#grhP+6kaI'kJXV.YJXV.Yc^Oj8[f>1`e,Yd6rli3IJXV.YJXV.Y
JXV.Yn='@/Q2f>6Y5dhfrq68^JXW-uJXV.YJXV.YPa_TIrqi)_h#R3MR/d0%JXZ;$JXV.YJXV.YJXX!8
rlrgiaoBijS,`KUrgV?)JXV.YJXV.YJXV.Yfp_o4rqDo^e,[AcgAh/cJXWX.JXV.YJXV.YJXZG(rlLZ0
J,
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Z!<rk4YeJXV.YJXV.YJXVUfrlOp7V>o$FT)\fYrgWMJJXV.YJXV.YJXV.YZC:cbrqN)be,\Y2\c;ZC
JXXfOJXV.YJXV.YJXY&VrlVPHmJkZ9U&Y,]rgTjTJXV.YJXV.YJXV.YpR;)SrqN2ee,Z3BrkF#QJXV.Y
JXV.YJXVsprlh)9e,]@FX8i1hrg\P.h3rn`JXV.YJXV.Y]UJhmrqXe<g&KP%V#UG2[[Mc9JXV.YJXV.Y
JXYD`rm%>>e,ZfSpAb-ergn\0P+$rjJXV.YJXV.YrhTPlVuP]UoDkfhrm-.al^EBnJXV.YJXV.YU72)9
j8[*ue,ZNKrr2nna-qRJJXV.YJXV.YJXXTIri`7"e,[Mgjo>>8JXW7#JXV.YJXV.YJXYbjrogB^o`3nM
WrN(&JXZM*JXV.YJXV.YJXVLcrk/+-Z2`;RXoJCbeXD&XJXV.YJXV.YJXWd2rg`u[XoHlNgAf\&rk<rP
Z'p64JXV.YJXV.Yd$jsV[K$(&e,Z`QrqZPaNLGEeJXV.YJXV.YJXZ5"rhTPmYlE2QYlF^Rk*gjiJXV.Y
JXV.YJXVjmro10^e,\q:_uK_>JXXHEJXV.YJXV.YJXX-<rk$DSjo<g1ZiC$mS!nnsJXV.YJXV.YJXYD`
rgj&`ZiAMTZiC$GpR6Z%JXV.YJXV.YJXV.YrgNi9ZiAPU!!'J-rr2nmJXY&VJXV.YJXV.YJXW=%riY;]
dJq\r[f??cXI=^/JXV.YJXV.YJXXKFrp@/oe,[)[rVul2JXVC`JXV.YJXV.YJXYbjrlV\LklC&M\c;[-
rh+h2jI1XgJXV.YJXV.YMjjXEqZ"8/e,[&Zro1V[JXV.YJXV.YJXV.YXIB.V\c:.ZcN!82rkX/SR@8\q
JXV.YJXV.Yd$jsY\c;U.fDrSarr2nkJXZ8#JXV.YJXV.YJXV.YoU>c\\c:.Z]`7umcC0<QJXV.YJXV.Y
JXVjmrpdZ$e,\M.g].8kJXWU-JXV.YJXV.YJXX-<rm8mhnc.)=]`7u-L73[^JXV.YJXV.YJXYD`ris-9
e,[8`rpJ[4JXV.YJXV.YJXV.YJXZS.rqX>/e,]4Bb5_IiJXX3>JXV.YJXV.YJXW=%rnlc9h>bt)^]4;B
Q^WJoJXV.YJXV.YJXXTIrklMNe,[Acrr)hfo9t6!JXV.YJXV.YJXV.YlC.^N^]3*ip]/22roSd#baO*O
JXV.YJXV.YMjjY9qZ"\;e,[AcrlV1.JXV.YJXV.YJXV.YYF>IB_Z/*c_Z0V=JXV7\JXV.YJXV.YJXY&V
rk$&IJ,
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,[Acri^mAn="osJXV.YJXV.YJXYbjrk$&Ie,[Jfrql\abaO*OJXV.YJXV.YJXVLcrhI@1e,\Y2i;`f=
JXWF(JXV.YJXV.YJXW[/rpnbBmJkZ9`W,qaJXV.YJXV.YJXV.YJXXrSrnGEle,[JfrjgjRJXV.YJXV.Y
JXV.YJXZ5"rl)kVe,]@Fbl@[;JXX-<JXV.YJXV.YJXVsprib_hg&KP%aT)81P+$rjJXV.YJXV.YJXX6?
rg`ucaT'`iaT)7pm[A]qJXV.YJXV.YJXV.Yh4"?-aT(3!oDlu4rl0MXb*mmMJXV.YJXV.YJXZSeaT'`i
aT)7HVOE()JXV.YJXV.YJXWF(rkZ\Ue,[Si!McCiUOekcRXpoYRXpoYRXppLRf9M3s7HBM!6bEApjnmg
RXpoYRXpoYRXpoYRdHRCT?.&^!6bEAk-pe1RXpoYRXpoYRXpofRf;m$s3q&&s763heUa0QRXpoYRXpoY
RXpp5Rf;9ps7u]E!6bEA`.=BGRXpoYRXpoYRXpoYRb!r,d*)I=!6bEAZceegRXpoYRXpoYRXpoYReiKP
^WZZ,!:KmDs8JdER\uU*RXpoYRXpoYR\#uIYNPrIs3q%os8MqIRK/e-RXpoYRXpoYRXppERf9)*s3q%o
s8MNCRXpoYRXpoYRXpoYRXppfRf<61s4%)L!7(WDjFNc0RXpoYRXpoYRXpo_Rf;gUs3^kr!7(WDf9D_T
RXpoYRXpoYRXpp.Rf;Bns3q%os8L73RXpoYRXpoYRXpoYRXppRRf:pas60OM!7(WD^O_itRXpoYRXpoY
RXpoYRe*!Ibg-7<!7(WDZ`'=DRXpoYRXpoYRXpooRf:(Is3q%os8K!KRY7,\RXpoYRXpoYR_,$f[EegN
!8%:ss8JaDRc'WcRXpoYRXpoYRXppbRf9J8s3q%os8JM#RXpoYRXpoYRXpoYRY.(.Vp>=l!94%Js8MhF
R['=mRXpoYRXpoYR\uVRT\f_=s3q%rs8MS?RdlhtRXpoYRXpoYRXppKRf<<6s3q%rs8M<.RXpoYRXpoY
RXpoYRXppoRf<$.s3q&Bs4mYRj+3YuRXpoYRXpoYRXpohRf;dKs5!_)!7CiGgkD2JRXpoYRXpoYRXpp7
Rf;Nus3q%rs8L[0RXpoYRXpoYRXpoYRXpp[Rf;Bqs4m\M!7CiGeq':'RXpoYRXpoYRXpoYRf&WRimIeU
!7CiGe!ZYURXpoYRXpoYRXpp#Rf;3ls3q%rs8LF=RXpoYRXpoYRXpoYRXppGRf;-js*t
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,[nrrm?:ciL5=dJXV.YJXV.YJXY5[rnZ!%e,[nrrm&3GJXV.YJXV.YJXV.YJXZM*rn>d"e,\Y2m/R(/
JXW!qJXV.YJXV.YJXW7#rn-?4mJkZ9dJs3gJXZ8#JXV.YJXV.YJXV.Y`1$\VdJq\rdJs3ed@,WTJXV.Y
JXV.YJXV.YkaMM#dJq\rqZ#4JrlK_[XdXg0JXV.YJXV.YN10asq>].Je,[nrrlg4fJXV.YJXV.YJXV.Y
YaYRDdJq\rdJs3kjdLahJXV.YJXV.YJXV.Ye=-BjdJr/*oDm;=rm64b_4#qDJXV.YJXV.YJXZA&rnZ!%
e,[nrrmRF,JXV.YJXV.YJXV.YS=9H7dJq\rdJs3rq3ll'JXV.YJXV.YJXV.Y^mb8]dJrk>huM1)rmu^i
eXD&XJXV.YJXV.YJXYYgroDK,e,[nrrnF]HJXV.YJXV.YJXV.YLmn>+dJq\rgAgsJro/KtNLGEeJXV.Y
JXV.YXIB.Vg&LmJe,[nrrp#''l'd0lJXV.YJXV.YJXXrSrq=b>e,[nrrpdsrJXV.YJXV.YJXV.YJXZ5"
rr(7Ee,\q:jT#5SJXW:$JXV.YJXV.YJXW'srh&KUjo<g1cN!m5JXQS-JXV.YJXV.YJXV.Y^RG/!cMuAo
cN!m;gmWe_JXV.YJXV.YJXV.Yj-otMcMuDp!!(=ErhtC:\=.u;JXV.YJXV.YLRS4Mrr:CGe,[eorj%cW
JXV.YJXV.YJXV.YX.'%%cMuAocN!mXn="osJXV.YJXV.YJXV.Yc^OjUcN!,/li>?2rlTe\baO*OJXV.Y
JXV.YJXZ2!rmoBpe,[eormn$:JXV.YJXV.YJXV.YQ^[p5cMuAocN!n'JXV7\JXV.YJXV.YJXX3>rpJ)3
r;bIMcN!n3JXYMcJXV.YJXV.YJXV.YhjXQAcMuAocN!n@]UFD?JXV.YJXV.YJXV=^rh@U9e,\M.lMpjX
JXW'sJXV.YJXV.YJXWU-riY#Unc.)=bQ%RHJXZ>%JXV.YJXV.YJXV.YcC4aGbQ$&lbQ%RYe!biVJXV.Y
JXV.YJXV.Yns]R'bQ$&lpA`_DrmQFeYF:$2JXV.YJXV.YQC@g1n,M5De,[\lroB!+JXV.YJXV.YJXV.Y
\siWfbQ$&lbQ%S8kF-sjJXV.YJXV.YJXV.YiL9b;rr1+@h#R3MaT)75JXXTIJXV.YJXV.YJXV:]riQ8$
aoBijaT)7FU7-Y%JXV.YJXV.YJXWR,rkHPSe,[Sirl"f)JXV.YJXV.YJXV.YJXXiPrm8adJ,
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,[SirksAVlC*9mJXV.YJXV.YJXYPdrm8ade,[Sirn>A\JXV.YJXV.YJXV.YKpr#'aT'`ik5XKArpYK-
U7-Y%JXV.YJXV.YXIB-YrqkLNmJkZ9`W,q2JXV.YJXV.YJXV.YJXXrSriO0>e,[JfrjU^PJXV.YJXV.Y
JXV.YJXZ5"rkl_Te,]@Fbl@[eJXX-<JXV.YJXV.YJXVsprn6]=g&KP%`W,qtQ(!8mJXV.YJXV.YJXX6?
rpRi+e,[JfrqZP_oU:?"JXV.YJXV.YJXV.Yj-ot@_Z/QpoDlc.riC[>d$fNSJXV.YJXV.YLRS4Prr9t;
e,[Acrl;+/JXV.YJXV.YJXV.YX.'%;_Z/*c`rH#;ro8QuLmim`JXV.YJXV.Yc^Ok%_Z09/huLXorqubd
JXYbjJXV.YJXV.YJXV.Yp6tuW^]2d`^]4;?_jZ.FJXV.YJXV.YJXW$rrkQ;Ke,\5&k5YG,JXW4"JXV.Y
JXV.YJXX<ArnGKnq>\qE^]4<!JXZJ)JXV.YJXV.YJXV.YjdQ1<rq=,,e,[/]rhA,8JXV.YJXV.YJXV.Y
M44FG]`6I]mf1W5rkX/S[[Mc9JXV.YJXV.YXd]76f`1(5e,[/]ro'$/JXV.YJXV.YJXV.Yd@1(%]`6I]
]`8!0rh/eMJXV.YJXV.YJXV.YJXZA&ri*I.eGoRL\c;ZBJXXiPJXV.YJXV.YJXW*trlOF)dJq\r\c;Zc
WLAC,JXV.YJXV.YJXXBCrp%&oe,[)[!<<&qrgn\0Lmim`JXV.YJXV.YkF2CI[f>Rlli=KorjmZLjI1Xg
JXV.YJXV.YMjjXbqZ"8/e,ZrWrnYAYJXV.YJXV.YJXV.YYF>IT[f=hWcN!//rqubhJXW4"JXV.YJXV.Y
JXY/Yri3=)r;bIMZiC$CJXZJ)JXV.YJXV.YJXV.YqO7E1ZiAMTZiC$if:%8ZJXV.YJXV.YJXW:$rgWo[
ZiAMTir@@)ri:U=[[Mc9JXV.YJXV.Y`L?e8_#Ns)e,Z`Qrm?mtJXV.YJXV.YJXV.Yl'hV-YlE2QYlF^r
rg`MIJXV.YJXV.YJXV.YOIH0Brr')$e,]4B\GuQ=JXXiPJXV.YJXV.YJXWs7rl*:bh>bt)XoJC]WLAC,
JXV.YJXV.YJXY>^rgWoVXoHlNY5eJ#ri:U=Lmim`JXV.YJXV.Y!LfJV\#TJa!;HPos8LW$RcKogRXpoY
RXpoYR\Q>Nj5U*\s3q%Ks8MrqU;NFNRXpoYRXpoYRXppMRf9=bs3q%cs5s@\b(6"RRXpoYRXpoYRXppq
Rf:m9s*t
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,ZEHrlU.fJXV.YJXV.YJXV1Z!7h2%eu/Pt!2okro_tBGRXpoYRXpoYRXpoYR]2bTU&Oqes3q&2s1eU5
]RcNkRXpoYRXpoYRXppPRf:C<s6]j9!2TYom%Tr"RXpoYRXpoYRXpq"Rf8oXp8%`<!29Gl\Ug3#RXpoY
RXpoYR[BQC`hEF^!;c_os8M>8RbaE`RXpoYRXpoYR_P<jSc8<(s4RG%!1s5i\@e8]RXpoYRXpoYRXppf
Rf:6ss3q%Ss6]jcl@GCkRXpoYRXpoYRYmR5Sc88Qs5<tM!1X#f[t1"BRXpoYRXpoYRXpp1Rf:4Vs2G#f
!1X#fl-l)PRXpoYRXpoYRXppXRf8iVo:,d0!65&fs8KT\R^/B5RXpoYRXpoYRe`EO`gHf!!8mjEs8MNe
S<97kRXpoYRXpoYR\6,KU&OiNs0;UR!1!T``pK4GRXpoYRXpoYRXppGRf:a#s3q&&s1JC2q#6q;R`q4O
RXpoYRXpoYRd6FAW;cads7u]E!0[B]dAWLbRXpoYRXpoYRZEp:h=gl>s3q%3s8MurVh(:lRXpoYRXpoY
R^S[aZ&eq7!:Kl]s8Li*RcBifRXpoYRXpoYRbF50l)XjGs3q%-s8KFCRXpoYRXpoYRXpoYRf:-^s3q%G
s6'F]nc#)1R\?1$RXpoYRXpp+Rf9&\pl,7'!!!"Us8L;pRf/\+RXpoYRXpoYR`q6"g:@72s3q%*s8Mur
Wna%oRXpoYRXpoYRXpq!Rf9[Ks3q%[s3:TCkCK)3RXpoYRXpoYR[T]ESc8,5s60OM!/(=N_3^UARXpoY
RXpoYR_G6ic,]jts3q%$s8MfmU\:.-RXpoYRXpoYRXpphRf9>drIb."!7(VNs8Lr-RaRXURXpoYRXpod
Rf8iVl[f'9s8;rM!.k1Ks8Kj>RXpoYRXpoYRXpp3Rf:U_s/H%J!/COKs8MopW.CD!RXpoYRXpoYRb+#-
Yl=WQs8DuI!94$Hs8M6]S:R-tRXpoYRXpoYRXpq,Rf8rYnV[A:s3q%"s7cQmbKH?*RXpoYRXpoYR\H8M
fAlmrs3q%;s5*eTrr0'OR];g-RXpoYRXppLRf9gJs7H?@!;?GDrrN0"rp]oZM40!aJXV.YJXV.Yn='?P
rq;`Zh>bt)JcG9?rnZ\)JXV.YJXV.YJXVporg`uNnc+1?e,ZZO_>jMSJXXNGJXV.YJXV.Y]:/`IJcG0<
h#R3MJcG0<rr2o%URHb&JXV.YJXV.YigTkZU]8I9e,Y("li6tW!McCiUOekcRXpoYRXpoaRf9>dq>pWr
JcG-;e,[AcVuQbXrg\P.iL5=dJXV.YJXWg3rh'2XJcFs6J,
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Y("kl:YDrg_6%JXV.YJXV.YJXXNGrh'2X`;c\6e,YC+h#IB#JXWR,JXV.YJXV.YkaMM+JcFj3e,\Y2
JcG]KrkF8XJXV.YJXV.YO.-'kJcGHDmJkZ9JcFa0rr)i&kF-sjJXV.YJXV.Y[[R3/ci9.-e,Z*?_Z0W1
ri1O<`gVIIJXV.YJXYD`rj)P%JcFX-e,]@FJcFd1rpp&_V4)t(JXV.YJXV7\ri#hkK`Ba*e,Y("g&M'8
rgeV/KURI\JXV.YX.'$]rp\bDJcG]Ke,ZfSV>pPMrgSJ-j-kOfJXV.YJXY#Urgj&OJcF=$i;iKMJcF4!
rmJQMJXV.YJXV.YJXZD'rg`uDO8m3!e,Y("lMp&Irm$(`Ssk5!JXV.YTUPkLrn6N8JcG!7e,[MgM#[Iq
JXZP+JXV.YJXV.Y`1$\UJcF!po`3nMJcEmmrl!T\JXV.YJXV.YJXYnnrm7,6Z2`;RJcG`Lb5_IUJXX3>
JXV.YJXVajrlap5JcF:#e,\5&JcG0<rr2o/R[SerJXV.YJXX-<rl0Nhbl@M=e,Y("`;fi8rk%upJXV.Y
JXV.YJXYMcrl(`6Sc@1>P5hcdrr2o3JXY5[JXV.YJXV@_rlY6?JcERde,\q:JcF$qrku:7JXV.YJXV.Y
Y+#@9JcF@%jo<g1JcEmmn,NC.JXVmnJXV.YJXY5[rgWo:YlBR[e,ZBGOT5=*JXZ8#JXV.YJXV.Y!LfJV
S,V)ls0_mW!!!"Ms0D\(df,`fRXpoYRXpoYR\lPQSGq>qs5O(+s3q%"s5*e(s8LgQSUm6<RXpoYRXppP
Rf9#[jh(PDs7QEA!4r2]s7?9ikl.<ARXpoYRXpoYRe3'JW;c7:s/c7b!:0]:s/H%to)>Z]RXpoYRXpoY
R[]cFYl=BJs6]j"s3q%"s762ts8MfmZ[nRoRXpoYRXppERf9u!r5Sbfs5F"-!7(Uqs475LrVjR;RXpoY
RXpoYRd$:?b(9Scs8;rM!.k0Ms7H?jd/KPdRZs7lRXpokRf8oXg4B:ss/H%J!/CN=s8M-ZUOem*RXpoY
RXpp=Rf98bm*>W^s3:Sn!94$0s0ht,p&;5ERXpoYRXpoYRc0_7\c2DUs/5nes3q%"s1\Nbs8N#s`dsS`
RXpoYRZ!X6SGplds8Dt_s3q%;s+14Cs8LjRT9G^pRXpoYR^/C]U]0B+s+13\s3q&Bs+139s8MNeY4A$4
RXpoYRXpp\Rf9_oon!.Hs5!_)!.k0us0r%-rr1(>S:R-YRXpoYRY.(.T)R2ms+14"!3Z?Qs4./Kkl.Ne
RXpoYRXpp-Rf9Jhmb[tps/#bO!;HPFs,-jMs8Mop_1A&<RXpoYRadf*S,US0rIP!Xs2k;j!.k14s-3Q_
i;TL&Re3&"RXpoYRerQQW;c"?s+14;s3q%cs+13Xs8Mfm_:+j(RXpoYR\cJPSGpV/qr[p0s,m>3
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Y("Y5cWDrqQK/JXX?BJXV.Y\XNMfrlG*9JcF0uV>o$FMZ88-kPtPEri2Z\JXV.YJXYMcrilChW;hGK
aoBijk5U#4M#[JQrltM7!M,d4RY.&[RYmR5T`3L@s+13$s6]j9!.k0es/,hqnG]hHRc9ceRXpp4Rf9u!
p4<7qs,m?2!1s4As2=s:h>X=jRXpoYRXpp^Rf9DfjK8H5s0_mV!;c_Hs+143s8MurdJfeiR\lO)RY@40
U]B$Jf[tcTKE'X)e,Y("f)LC&rqQK3rg\e5JXV.YYF>H^rlkB=JcFO*JcG]Ke,ZfSJcDGDrp]oukF-sj
JXV.Yfp_o0rk\U,ZN#LUU&X'OoDjIBNrQlorosEkJXX]LJXV4[!LoPYS,U,#mXbCos2G#f!.k18s+14+
s8M<_\>u'LRXpp0Rf8fU^AdSPs5*d,s69R5!65%is+14Is8M?`\Ug3/RXppZRf8iV^]*`0s+130s7HBM
!.k0Es-`odm/FZsS:R."RXpoYRf8oX_Z'(Vs,-i]s3q%"s8N%Ls0r%-o_uu3U=>W_RXpp.Rf9/_ci3]j
s5<p.s4./!!8@I(s+14#s8MrqfD_h%R^SZ9Raml+Yl<GWrjMiXs+14Gs3q%"s0hrYs7$'fjSl^hS=>su
RY$t.SH5:PrkABrJcCT,Sc@1>P5g+5NrT+PrmC_GrL/;+JXW[/ric=PrqV-FhuA9-_>i!bmf.k<JcD_L
rp'L$rh4n3igPFefp_o9rlG*,ZN#LUJcFj3e,Y("b5[%ma8c/:rn[Rbrgq0!JXV=^rh';+^&YnHiVrh-
s+p]3s3q%Gs+13$s5O(Xqu5IO^&F[UR]MsaRf9&\_>`HnrIP"'s+13Ps4%)L!.k0%s+14Ks8MuriVp[m
U61mqRc'Y6V>eF4jo57^s+13$s3^kr!.k1,s+138s8M?`ci1<NSb\_*RZO!;T)Q4ue,Je7s+13$s+14C
s3q%[s+13$s02P&r;PaUa8W1>Rt7$eR_YBkS,TVjb5UQ&rIP!rs+13<s60OM!.k09s+13ks8Minj8R=&
\,N)CRXppsRf9)]\c0tTk5P7Os+13$s1SH^!.k1@s+13$s5!_SnG_,?`;[(ATn/Z`Rf9)][/S)Eh#?m4
s+13$s+14/s3q%os+13$s+14@s8M]jjSmX-_Z$h>U8"+0Rf9)]Zi7oBec+_1pjrIWs+13(s8;rM!.k0M
s+13's8Mopmf)5Ff)Ehk^AbG;W;`LiS$ndbS,T/]WW'7'^])IVfDak1nG`?>s+13$s/H%J!/CN)s+13-
s8Mfmnc%ePir7^3fDa>"e,I_ncMl&eao9B\b5TWacMl5je,Iqtf`'\*j8S?Co)AI&s+13$s+13ps3q&.
s+13$s+13$s+13$s+13$s7--=!.k0as+13$s+13$s+13$s-<W6!1Nq=s+13$s+13$s+13$s1/0Z!;?GD
s+13$s+13$s+13$s+14+s3q%"s3gpus+13$s+13$s+13$s3q%Os+13$s+13$s+13$s+13Hs4m\M!.k0-
s+13$s+13$s+13$s2k;j!.k14s+13$s+13$s+13$s+14;s3q%cs+13$s+13$s+13$s+134s*t
~> 0 36 m 0 28 l 357 28 l 357 36 l h W n EOD
e,Y("Y5a(QJcC<$JcC<$JcDSHe,YC+JcC<$JcC<$JcC<$JcEjle,\Y2JcC<$JcC<$JcC<$JcC<$mJkZ9
JcEUeJcC<$JcC<$JcC<$OoNo2T)XBAJcC<$JcC<$JcC<$[K"_VqYu-HJcC<$JcC<$JcC<$JcFF'e,Y("
f)L=$JcC<$JcC<$JcC<$rVt@IZN#LUJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$OoKq
~> restore
Q
/Cs2 SC
0.48286149 sc
q
0 0 m
120.96 0 l
120.96 120.96 l
0 120.96 l
h
0 0 m
W
0 0 120.96 120.96 rc
1 0 0 -1 -397.44 534.71997 cm
/F1.1[ 4 0 0 -4 0 0]sf
448.25 524.87488 m
(!"#$%&'"\(\)*)[ 2.372000 1.260000 2.148000 1.260000 1.112000 0.888000 2.296000 1.260000 2.372000 2.148000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
15.355016 64.009117 m
16.155016 64.009117 l
16.155016 54.105015 l
15.355016 54.105015 l
h
15.355016 64.009117 m
f
21.055016 69.855072 m
21.855015 69.855072 l
21.855015 54.105015 l
21.055016 54.105015 l
h
21.055016 69.855072 m
f
76.879997 62.079998 m
77.68 62.079998 l
77.68 54.105015 l
76.879997 54.105015 l
h
76.879997 62.079998 m
f
83.580002 67.279999 m
84.379997 67.279999 l
84.379997 54.105015 l
83.580002 54.105015 l
h
83.580002 67.279999 m
f
70.18 58.48 m
70.979996 58.48 l
70.979996 54.105015 l
70.18 54.105015 l
h
70.18 58.48 m
f
63.48 56.48 m
64.18 56.48 l
64.18 54.105015 l
63.48 54.105015 l
h
63.48 56.48 m
f
56.779999 56.679996 m
57.579998 56.679996 l
57.579998 54.105015 l
56.779999 54.105015 l
h
56.779999 56.679996 m
f
50.079998 58.679996 m
50.879997 58.679996 l
50.879997 54.105015 l
50.079998 54.105015 l
h
50.079998 58.679996 m
f
43.379997 61.879997 m
44.179996 61.879997 l
44.179996 54.105015 l
43.379997 54.105015 l
h
43.379997 61.879997 m
f
36.679996 67.079994 m
37.48 67.079994 l
37.48 54.105015 l
36.679996 54.105015 l
h
36.679996 67.079994 m
f
98.955017 69.455009 m
99.75502 69.455009 l
99.75502 54.105015 l
98.955017 54.105015 l
h
98.955017 69.455009 m
f
104.65501 64.255013 m
105.45502 64.255013 l
105.45502 54.384117 l
104.65501 54.384117 l
h
104.65501 64.255013 m
f
12.000464 54.830009 m
108.95953 54.830009 l
108.95953 51.630013 l
12.000464 51.630013 l
h
12.000464 54.830009 m
f
1.5 w
2 J
1 j
0.60000002 i
1 0 0 -1 -397.44 534.71997 cm
506.02454 472.18997 m
506.02454 472.18997 502.76208 470.83685 498.16998 466.68997 c
493.57788 462.54309 489.81546 457.55249 489.81546 457.55249 c
S
425.69046 457.42749 m
425.69046 457.42749 439.7381 478.11499 457.94046 478.11499 c
476.14279 478.11499 489.94046 457.42749 489.94046 457.42749 c
S
409.81549 472.31497 m
409.81549 472.31497 414.53278 469.44308 419.03021 465.18997 c
423.52768 460.93686 425.69046 457.30249 425.69046 457.30249 c
S
0 i
CM
25.080015 81.479996 m
31.480015 81.479996 l
31.480015 39.48 l
25.080015 39.48 l
h
25.080015 81.479996 m
f
89.280014 81.479996 m
95.680016 81.479996 l
95.680016 39.48 l
89.280014 39.48 l
h
89.280014 81.479996 m
f
ep
end
%%Trailer
%%EOF
