%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 81.272014 87.839998
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 82 88
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 82 88
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 81.272011 87.839996 rc
72 0 0 78 3 4 cm
save
648 27 cg_miaiproc 
195 -39 -39{
gsave 1 216 div 1 234 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
216 40 scale
BI
/Width 216
/Height 40
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 39 m 0 0 l 216 0 l 216 39 l h W n EOD
JcC<$JcC<$JcFU,joE0rJcDMFpuD.upuqSI!VQ-\qY9s_qY9aYmeH/Dp4<7\s1A<n!.k10s+11Ms7kXL
e+i/%p%\CYqtU$_p%[tMm.g;9s+13;s69U_!.k0(s5!_Mj7q*ukkOiGqY9s_qY9aYmeH/Dp5&a"s7QES
!3#pKs31N<meFKj[J7H1](i]%Zi7E1[eRH/^A,S?b4t#lrdk*_s3gr0!.k0ns/H%nmeFKj[J7H1](i]%
ZhV!(](j#7_YD:Kj7rW3s+13Rs5j=Ls+13)s8;<`meFKj[J7H1](i]%ZhV!(](j#7_YD:Kj7rV+s,@!?
!0R;4s7QEerV4G.V"h1hYP>0eW91#QWVNRpX8&jmYkYO!a8#R`s0)Ies5j<4s0VgSs7lQfa7uJ*YkYEs
X7*"LVtd7dX8&jmYkYO!a8#S\s+13is5j=5s+13Rs7lQfa7uJ*YkYC%X8/gbW91#QWVEOhY5#6rZM;K8
r.4n@s.fVV!.k1Hs-<WZqtRo#U%kY_WVE=bU\LSYU$nZCU%kDXV>."fWr/mlX8'U-rIP!BrrE)]!.k0@
s763bqtRo#U%kY_WVE=bU\LSYU$nZCU%kDXV>."aWq`Xi_ta2Ks+14+s5j<ss+13rs7lKd^A+DsWq`Rg
V>-h\UALY`U$nZCU%kDXV>."aWq`Xi_ta1]s6'Ens5j<4s5X-ns7lTgqY7PpT_PG[V>-e[TD5#HSaW*;
SbSfOTD5,TU\L\\VteGds.KDX!;lhJs.KDerqQ?c[fEo4T_PG[V>-e[TD5#HSaW*;SbSfOTD5,TU\L\\
VteH;s+14Bs5j<\s+14Fs7lTgqY7PpT_PG[V>-e[TD5#HSaW'LSXo;Apn%8Qpn@JXpndb`pre6gd/VMn
joBu4bl?Q"q#:'appKmgpn[\Zpn7DRpmgfBh4!f%pmh,Mpn.>Tn"][Fr;V?JY5dVan,It=]Dq[*q"a]m
pn%8VpnI_[r1NhVpmgfBh4!f%pmh,Mpn.>Tn"][FTDsiLjoCSER/cs\q"a]mpn%8VpnIPVpn%8Nn!i.%
nXBQKS+rNKSbSiPU$ncOm=G;Ss60LF!.k0Xs8N&nrqQ<ab4qG#U\LPXTD4uGS*ufqRI?U>S+rQLT(nuR
UA2Rds+13hs5j=6s+14)s7lTgq=r,-ReWZQU%k8TSaW':RadboReWBISbSfOT_P8V_2/,cs5j<4s82i+
s7lTgq=r,-ReWZQU%k8TSaW':RadboReWBOSbnuQT(nuRUA2QUs/Z/#s8V3]JcE%Uq"jdC!LB&JQM@0K
T_P,RSG8TKRbaD#R,+2*ReWBISbSfOT_P5Ukh#ics4mY:!5\\ds763bqY8tCQM@0KT_P,RSG8TKRc0\5
RI?O!RJ<6GS+rQLT(nuRU%mi&s8)c+s5j<4s5a4+s7lHchtWN4U%k;UT(niNS+rH.RI?O!RJ<6GS+rQM
ScGAWT_P5Uk^ic>s6Ka_!.k0^s7lKdmeEXRS+rWPScPFSpmh,KpmUZ>\X;iRpmUuIpmh,Npn.>i_#Juc
oDdqQWrJ7^q"sjSpndbTpn.>Qpmh,KpmUZ>e!T<cn!Ws>pm_&Kpn%8QppPbRj8[L+joBu4c2[84q"sjS
pndbTpn.>Qpmh,KpmUZ>\X;iRpmUuIpmh,Npn.Mnr3h1VZN'%enGe(>ec5FCq"+9apmLoKpmq2Mpm_&I
rgE>FVjQq@pmUuIpmh,Mpn%9@ZN#g^joCVFZN'^uq"+9apmLoKpmq2Mpm_&In!UMLopG39pmUuIpmh,M
pn%9@JcF:#kPsZEJcE[gq#1-^rU]ffpmLoKpmq2Mpm_&In!U)@n!Ws>pm_&Kpmq2OpuD/LJcE[gjoF*7
JcGECq#:'^pt>G)pmq2Mpm^`@n!W[4VO6h?pmUuIn!s0iS,]2^joBu4r;Y4Fq#:'^pt>G)pmq2Mpm^`@
n!TH.!L]AGRJ<6GS*umB_L_a$s8N&\!.k0ps7lTgpA!>9OnbIISGA]MS*ug7R?a0.RJ<6GS*umB_VtNG
s4dS9!5ebps7lKdlhJ$cP4+n8Rc^$bR'`7LRJ<6>S+roVrf-rfs5j<4s5j:Fs7lKdlhJ$cP4+n8Rc^#j
R.6RFR@3i=n!j*Mq#5jE`;f3)q>c*Hc2[S9q!7^cplb*8pmV)Jm$WKnn!Ws>n!j*Mq#8bBJcG<@joDI^
XT/(pq"4@;pndbLn!`^5VjP>gpmL95pnRWXJcGHDci<,-JcF=$q>LBnq"4@;pndbLn!`^5JXGYgpmLK;
qjR;Tq"B:=`;es"nc+1?k5Y5Uq"4@;pndbLn!`^5m?iHlr0[8Ik*l(?q"DB#M>r)
~> 0 40 m 0 0 l 216 0 l 216 40 l h W n EOD
joBu4f)POEq"4@;pndbLoU>]Hn!S`oka;.5k*l(?q"EnNJcFU,joE0rR/csZq!Ik'pn.>Fk*`NBV3p_>
n!a%*MZ:<gjoBu4irA]Oq#'pSpsAf.pljj.JXG#U!1E>En!a%*JcE[gl2^b_JcF=$q#'pSpsAf.pljj.
pm?W"hjEl#n!a%*d/S[sp&F.SW;j($q"jdJpqc``JXH2!Z^BmCpqVI\oDd8=joBu4f)POA!TrP@k4ldf
Mh.7pR.?[<RJ=RKs2=s"!:Kl<s69RYqY94J_>&r%R":XlR-'h3^q'K(s5j<Ds2P*6pA!P?Z1s=RQ[tOg
R),0YQh[KRrdk+2s69RG!.k1$s7l<_htXJQN<,#upm6Q!WL3.@pnn/lrqcVFs3:T+!8%7%rrE)opA!P?
Z1s=RQ`ld-R/<9>Qh[KRri?'os5j<4s8)cOs7l3\f_D9;Nqeq/Q[tObR-L($QhZmAU%nM9s3CWEs5j<4
s475FoD$u5V"fuFQM$UAQ[tOKR-'b1QM@0Kqsj];s5!_;!5SW$s7l3\f_D9;Nqeq/Q`?FKR-'b1QM@0K
qiq,ls5j<4s5X.Xs7lTgn+b<*SbS3>QKFNbR-9q+Qg^:9QM?a?Vtg(=s3:T0!;lhJs53kOrqPsWdJ0:-
NVJh%Qhd#"R.-L!QhZmAQ2%9Pq:bk"s7H?R!3-"-s7lTgn+b<*SbS3>QKFO(R*D#SQhZmAQ2%9Pq18SE
s3^l/!.k1-s7lNel2]!&b4qM%MtiS4QKFNbR/33+Qh-OAQM?a?Y5%^As3:T+!:Tr=s7--ar:oRPb4qM%
MtiS4QKFP"R#m]kQg^78Q2%NWp;?ogs5j<Es3CZ>r:oRPb4qM%MtiS4QKFNoR-g9sQg^78Q2%NWp4<8+
s60LF!.k1-s7lKdkP3'lS,8*BMYNJ3QKFNbR/33+QhZmAQ2$U=[K-$sp4<7gs5j=6s+p^MqtT@L`qZ%u
MYNJ3QKFO`R&?>-QhZmAQ2$U=[eTQts.]PU!.k1Is5j:UqtT@L`qZ%uMYNJ3QKFNbR/33LQf+5*QM?a?
Pk_]^p4<7irrN0"joBu4huEKJpu_@ipm_&9pm1W?ka-jfqO$**n!<a6pqQUto)F:@h#HL:_>g/-q"jdJ
pr)rspknj4h3YgB^6m`Cn!<a6pqQUtQ2eDpjoBu4jT#/Xq"jdJpr)rspknj4h3W\[qO$H4pQt?7pm(Wh
q"B:=c2[,1qZ)3IhuEKJpuhFkpmq29pm1B8nX+lpn!Mptpm1]?pr`C,g])j)oDdqQWrKO-q"jdKpr3$!
pk\^2n!B9+ba@4Qpm1]?pr`C,JcG`Ld/W5.JcFX-q"jdKpr3$!pk\^2n!ATmhjE5drKdAIpm(Wsq"TF?
c2Zo+nGe(>nGi:\q!%Rppn@J<n!DFhJXH(sk*Pk/pt#69`;b_pjoCVFc2[S9q!%Rppn@J<n!ATmoU+$n
k*Pk/pt#69JcFp5kPsZEJcFX-q"sjNprN6(r.k6+n!ATm`0f\Rpm1^+q"]L@c2Zo+g&Hj-q#'pQpriH7
pkbr:Jsc"npm1^5q"q2nU&X6TJcGZJjT##Qq!7^upoX=JJXFWJhjEl!pm1^5q"oXBd/X+FjoBu4huEKL
q!7^upoX=Jm[/Qm]U8/Spm1^5q"s[_JcFL)joE9uT)\Taq!Ik%pmLo?pm7G:JXHG(ptb`CQN+JpjoBu4
jo>5Xq#1!Tps/Z&plbE=JXF-<gR.clq##^Cc2[/2q>c*HhuEKMq!Ik%pmLo?pm9p+JXEs7ptb`Ch#Ds*
o)IhPX8fU-q#1!Sps&Siplad+pmCiCVjQV6Ya>.#q#,dD!WW2Gs5j<4s53kOrV>d[m.ej#M"m.qQhZsC
Q].<HQh$L<_"dkZs3:T+!:g)?s6p!_rV5aSc1m+iP3/,+R/!$8R%ThNQh\AkrPeens*t
~> 0 40 m 0 0 l 216 0 l 216 40 l h W n EOD
joBu4huEKMq!@e#pk\^.l^.O9pmCiCN0pi9pqZ\'nGe(>hZ)^<^]1#-q"sjMpqulkplFm0_O'/IjI!KE
n!<a6pn7E\PQ/8pjoBu4irB#Xq"sjMpqulkplFm0_O&-,_3atan!<a6pn7E\JcF!pl2^b_JcFX-q"sjM
pqulkplFm0k*Onj_O.m#n!<a6pn7E\g&HX'p&F.SW;jC-q"ORBppTsbpl=g.pm/d`e<p6%`L$%Zpm(W=
plkKCq##^Cr;Y4FjoBu4huEKGpu)7^[edH-R.u^1Q2$Z^QdhD>Qg^78Q2?gFPk^I;SG<#5s3:T+!:Kl<
s763bp\<_B[eQ6bNpi8.QIqPiQdhD>Qg^78Q2$U=PPC[Cr5/Jms5j<Ds3L`?o_@29[.o7JNqeh5Pk^O4
QHPWWR,41kQhZmAQ2$U=PPC=9OnbgKq18S-s69RG!.k1-s7l6]g\A/NK)1K.NfNmupltQ=n!;.`k*X#P
pm1]?pltQ;plbE7pne)fq>0o<s3:T+!8%7-s7l6]g\A/NK(tB$PPCC;Q1($fQhd!1R)53bQM?a?Pk^I;
P5(17VYKtfs.fVV!.k1Hs5s@VoD$u5Z1s(KMYN>/P5(::Q1(#kQi36JQM?a?Pk^I;Onb%5K(ukNp4<7h
rrE)]!.k1-s7l3\f_D`HLA6Z$Onb+=Pl$^?Q1(#kQhZmAQ2$U=PPC:8OSFG&\G5dfs+14+s5j<ss.KDe
oD$u5Z1s(KMYN>/P5(::Q1($XQbSm^QM?a?Pk^I;Onb%5K(ukNp6>Tgs5j<4s5X.Xs7l3\f_D`HO8+%r
Nqe_2P5(::Q2$Z(Qg^78Q2$R<Onb%5Nqe;&gA(Ams3:T0!;lhJs53kOoD$u5Z1sCTHMENqOSG"6PkgRE
Q2$Z(Qg^78Q2$R<Onb%5Nqe;&gA(Bqs+14Bs5j<\s0r%'oD$u5Z1sCTHMENqOSG"6Pk^O=QEHS3Qg^78
Q2$R<Onb%5Nqe;&gA(Ams8DuFs5j<4s53kOo_@/@[J@6*Q2#n)MYN8-Onb.8Pk^O=QBdg3QM?a?Pk^C9
O8+_4Jc1/pRJ>b9pjrIis5j=Ms+14?s7l6]g\A2OQ2#n)MYN8-Onb.8Pk^O=QMm/<QhZmAQ2$U=Onb"4
NVJ)"RJ>b9pr!,is5j<Es3CZ>o_@29[J6$^JG>#sO8+k4PPCC;Q2$Z<QhHd@QM?a?Pk^C9O8+_0JbYZ.
iV<2!s5s@Fs5j<4s53kOp\<_B^%e)oJGt)oHh`QpO8+k4PPCF<QBdg3QM?^>P5(.6N:1i__>*3oqYBu=
s3:T+!8.=-s7l?`iV:+]S+qO/Hh`QpO8+k4PPCF<QKFO<QhZmAPk^F:OSFe'F83THkkP"Us.]PU!.k1I
s5j:Up\<_B^%e)lJG=KdN;/J/Onb.8Q2$Z1QhZmGPl$^?P5(.6N:1i__>*6hqLS[mrrN0"joBu4huEKK
q!%Rqpn[\DphTY8!K2m4MtiA.P5(::QCaH<QM?a?Pk^F:Nph)bVYJ^:nG)tQs+14*s5j<ts.B>dqtTFN
anV\,N;.2`AGD)XO8+n5Pk^QjQdD)oQM?a?Pk^F:Nph)bVYJ^:nG)sIs1/0l!.k12s8;olqtTFNanV\,
N;.2`AGD)XO8+n5Pk^Q9QhZmAQ2$U=P51+<Nph)bVYJ^:nG)s5s3:T1!;cbIs53kOrqQ$Yf(cNFPk]q,
J,"'ZO8>"?P*5U)pm(W?VjI1Epm(W=plkK7pk/@7pqcabq"N5:JcG?AjoDF][f?.%q!n.1pp'UYpk8El
pi?.jplbE:pm(W?_3a>Opm1]?pltQ;plP9'pn7Dupu;)CJcGECd/W5.JcFX-q#:'Ypt#5FpltQ,pj`'Z
plG35pltQ=pm.hEpm1]?pltQ;plP9'pn7T%r5&0fq"K@>`;es"nGe(>kPt>PpuM4gpn[\Fpk8Eopl"p1
pltQ=rg*GIVjI1Epm(W=plbE6pl,!Upso0.q#%c(MZ;f=PQ/T$q"XXFpr)s'pl>-&pk&:!plbE:pm(W?
WgE^Opm1]?pltQ:plP90ppKnIq!\"UJcFU,kPsZEJcF=$q"XXFpr**+rM94Kpk8Eopl"p1pltQ=pm.hE
pm1]?pltQ:plP90ppKnIq!\"UJcE[gjoF*7JcG`Lq#'pVpt>GSpn@JBpk/?uplbE:pm(W?n<^YOpm1]?
pltQ:pjW"6ps8a"q"U?YU&X6TJcGZJg].'Hq!e(3pq-<ppl5'$pked/pltQ=pm.hEpm1]?!L/iFPk^F:
Ie]`6chQc"pjrIZs8N&\!.k1$s7lNenG(]3]D/)pN<"V,KD:;uP5(::Q2$ZCQhZmAQ2$U=P5'M$V"i:2
l1k&4s+14)s5j<us,@!Qq=s@PfD)rPSbS':GPI<qPk^O=QJ%VNQg^78Q2$R<M"o-fk4n]GrIk3\s5j<4
s5j:Fs7lEbmJ,<.](hikM>2;iOnb19Q2$ZCQg^78Q2$R>L]N<fpr`Boq"OR^JcE@^m/Zt_JcF!pq"a^P
pt,;Ppmq2:pilUtrfQu?pm(W?VjHk<pm(W<pk\^fpu_AGq#/A8JcG<@joDI^U]:,gq"jdOpsAf<plY?)
pl>-6pm(W?_O')Fpm1]?plkK;ptkf=q#5jEjT!R+joBu4cMmnEq#:'bq!7_%poX=Rpk8F&pltQ=pm.M<
pm1]?plkK;ptkf=rr2foJcE%UjoFrOJcFR+q#:'bq!7_%poX=Rpk8F&pltQ=!LB&JQCaH<QM?a?PPCC;
hY?d=ri6!Ts*t
~> 0 40 m 0 0 l 216 0 l 216 40 l h W n EOD
joBu4c2[S<q"jdOpsAf<rK7#?pk8F&pltQ=pm.M<pm1]?plkK;ptkf=q#8hDJcFU,joE0rJcG]Kq"ORA
pq6Bkpk8F$pltQ=pm0Kt^mFh^pm(WTq!.YOJcG3=]Dq!nJcFa0gAgsBpu(q[pm_&3pl,!4pm(W?Q'_93
pm(WT!:'CFq"oXBWW25`r;_EK]Dq[#pu(q[pm_&3pl,!4pm(W?Q'_93pm(WTq!.YO[JtgXp&F.SW;i+^
q"sjNprW<+pked'pm(<6h3[/hcC"BnpqQUnq#5jEf`0D"joBu4bQ%,4q"sjNprW<+pked'pm(<6h3Y@5
pm:cjq!e(Xqu;6IYQ*_bmf.k<cN!\:q!%RqpnRV@pknj3o9T?@h3Y@5pm:cjq!e(XT)XcLjoCPDX8hto
q!e(-poX=QpkSX1k*N??!1<5Cn!a$iq"94<\GtgnjoBu4]Dqa,!WN)nnG(K-Xn\"QL\R1tQ`ukGRI?U>
`;'#[s+13is5j=5s+143s7lTgnG(K-Xn\"QL\R1tQhQlYR.$I3ReXhron!/Bs.fVV!.k1Hs1/1)p%[A<
\+l?cM"m=%R/!*ERf/`RS+rTM\G5lNs.TGms5j<4s0D\"p%[AB\,3Z0R.uL4Q^*s5RJ<6GS+rTM\G5m<
s+14+s5j<ss+14As7l9^h>"JSR.uL4Qc5?>R/!*EReWBIT(ohjq18S/s186m!.k11s3Uf@q=s%G_YC#'
N96P+R/!*EReWEJT(nuRf7Esps6B[_!.k0Us7lEbjS6UeVYQ/NN96P+R/!*EReWEJT(nuRf<,((s7H?R
!3-!Us7lEbjS6UeVYH,4RD>3RR/!*EReWEJT(nuRf7EtKs3^l/!.k0os6'FWr:oOOanV_-Q2$jDReW;T
R.$I<ReWHKTD52VX8(oVs+13Qs5j=Ms+13gs7lNel1iBqV>->NS+rHNRJ`JWR.$I<ReWHKTD52VX8(nN
s,6p>!0[AUs7lNel1iBqV>->NS+rHIRBW(TRJ*'DReWHKTD52VX8(n0s2+g"s5j<4s0_n+s7lNelM/*g
QM@'HSG8TBRBW(RRJ<6GSG8]NUA1V\YP@JPs+13hs5j=6s+14)s7lNelM/*gQM@'HSG8TBRJ</[R/!*E
ReWEJT(o&TVYI@im#h=Bs5j<4s82i+s7lNelM/*gQM@'HSG8TBRBW(RRJ<6MSGSiOT(o&TVYI@im",2D
rrN0"joBu4ZN'^pps]>0Q26d@T_P,RSG8QARBW(RRJ<6GS+rQLT_P;WW;*[nnDO=ts4mY:!5\\ds763b
q"WA6Q2%$IT(niNRdZ['R*_5qRJ<6GS+rQLT_P;WW;*[nn:UbOs5j<4s5a4+s7lBaeG,=(T_P,RSG8QA
RBW(RRJ<6GS+rQMTE(Y[U\Le_ZM<p?s1A<t!;cbIs1A=+qtTLPVtcbVT_b2[SXoPFpmUuGVjQq@pmUuI
pmq2Rpn[\`ppKnhdf4muoDdqQWrJ7^q"sjPpo!nVpn7DQpm_&IpmJsckEt_+pmUuIpmq2Rpn[\`ppKnh
JcGECd/W5.JcF!pn,N1[q!7^Qpm_&Opmq2LpmUuGVjQq@pmUuIpmq2Rpn[ker2BCuq"0.;`;es"nGe(>
ec5FBq""3Zpmq2Rpn.>OpmUlDqjF%Cn!Ws>pmh,Npn@JZpo4%uq"Vf-MZ;f=PQ.rgq#'pXpo4%Zpn@JT
pmh,Jn!U2CopG39pmUuJpn%8Spndbbppg+oJcFp5kPsZEJcE[gq#('\rUT`_pmq2Rpn.>OpmUZ>Ss\u7
pmUuJpn%8Spndbbppg+oJcF!pjoF*7JcGECq#1!\pp0[cpnIPVpmq2LpmUuGkEr-6pmLoGpm_&Kpn%8T
pnmhfpq?J![f<'$joBu4r;Y4Fq#1!\pp0[cpnIPVpmq2LpmUuGN0jX6RJN?HReWBISG8]NUA1V\XSBL(
qLS\"s8N&\!.k0ps7lQfp%YifSbSoZT_Y8USbS]LReW;0R/!*EReWBISG8]NUA1V\XSBL(qY^AEs4dS9
!5ec$s7lTgp@u>rT(o/WU%k2RS+rH@RF%>7R.$I<ReWBISG8`OU\LkaZM;-.lDX`ms5j<4s5j:Os7lTg
p@u>rT(o/WU%k2RS+rH@R>dO%RJN?QR[X#@pmh,OpnRVapp0\.q!*G1huE'Dq>c*Hf)POEq"FKrpn%8W
pn@JRpm_/LrgN;DN0s(%pmUuIpmh,OpnRVapp0\.q!.;IJcG<@joDI^[K$%#pt5Ahpn[\`pnIPTpmh,J
n!UDIbF%adpmUuIpmh,NpnIP_pp'V+prN6rU]8[?joBu4huEKMq:G]"psJl4po*t^pn%8NpmUZ>JXH;$
n!Ws>pm_8QqjdGQpnIP_pp'V+prN6rJcG9?joFrOJcG3=q#1!?psJl4po*t^pn%8NpmUZ>p6^Q$n!Ws>
pm_&Kpn%8Tpo4%npq-=Bq!72EM>r)
~> 0 40 m 0 0 l 216 0 l 216 40 l h W n EOD
joBu4huEKMpt5Ahpn[\`pnIPTrLEeUpmUZ>JXH;$n!Ws>pm_&Kpn%8Tpo4%nq7?X=prN6rJcG9?joE0r
ZiBh!pt#5hpoO7npo!n]pn%8Npm_&IpmJa]Y*e[GpmUuIpmh,Npn@J[poX>!pqQUIq!#p#]Dq!nJcG9?
q#1*@rmpknpoO7npo!n]pn%8Npm_&IpmH]#ka;+4q3h#Hpm_&Kpn%8SpnmhgppKn3priHsKE(3:r;_EK
nc/C_pt#5hpoO7npo!n]pn%8Npm_&IpmH]#ka:h,pmUuIpmh,Npn@J[poX>!pqQdNr6+m"KE('6W;kZQ
q"XX5pt5AGpp0[ppndbZpn%8Npm_&In!Tu=]U8/UpmUuIpmh,Npn7DWpo*tjppTt5priHrq#8P<df8G0
KE(`Aps]#jposP!po4@kV>@%`U%k5SSG8TKRdZYqR,=;"RJWHPReWBISG8]NT_P;WW;*Oj[eRZ5bP:;r
rgs/P!:KlQs7lBae+hSjYkYO!Wq`FcU%k5SSG8TKRdZ[0R":XuR.$I<ReWBISG8]NT_P;WW;*Oj[eRZ5
bP:;rrgs/P!1!T_pAFXZd.jd=\G3B)Wq`FcUA1DVT(niNS+rH@R=psMR.$I<ReWBISG8ZMTD5,TV"gn`
YP>R$_"c(IkkP+ts69RG!1!TZpA!#0Y5#O%ZM:HpV>-e[T_P,TS,o.Mpm_&In!S`oc'[sfpmUuI!M#\V
SG8ZMTD5,TV"gn`YP>R$_"c(IkkP+\s5j=5s1eU/pA!#0Y5#O%ZM:HpV>-e[T_P,RSG8TKRdZZeR"Ujq
RJ<6GS+rNKSbSiPU%kGYW;*Rk[eRZ5b5CK%kkP+\s5j<Zs7lBa`;$>,Z1tKsWVE=bUA1DVT(nlOS*ug7
R=UadR+RegRJ<6GS+rNKSbSiPU%kGYW;*Li[J7E0`q\`lr58O7s5j<Zs7lBa`;$>,Z1tKsWVE=bUA1DV
T(nlOS*ug=RJWD'R(JaJRJ<6GS,/WUS=KAFpn.>Tpn[\`poX>!pq6CApuhGM_Z/`u_#NWuq"XX&po4%n
poaCkpndb[pn7DRpmq2Ln!`^5WgJs:k*c"5pm_&Kpmq2Ppn@JYpo*tippKn0pr<*l!;uZj_Z/`u\c;I(
q!7CFpo4%dpn[\Zpn7PVrLWeTpmh,KpmUZ>JXF':h3dZ!n!a$@pmh,Mpn.>TpnRV]po=+kpojJ*q!lQ-
lN$h_\c;I(q!7CFpo4%dpn[\Zpn7DRpmq2Mpm_&In!W%"JXF$9n!WX5pm_&KrgiqWpn.>TpnRV]po=+k
pojJ*q!lQ-joDslq#:-U!UK(?V>.%bVtd(_UA1DVT(nlOSG8TKRdZYqR$X3/RI?U>S+rNKSbSiPU%kDX
VYI1dXn]*p]_M$os3^l/!5ed2rV6'\U\LJMU\LPXTD5#QSF;sBRK/c=R=U`pR,XM%RI?U>S+rNKSbSfO
T_P8VV!k2U[EJU4!:Ts;s7lQfp%Y<WTC8QMU%k8TT(niES+rH7RD,&>R(o$WRI?U>S+rNLSH,5UT(nuR
UA1PQVYIRBs5j<us7lQfp%Y<WTCnuVU\LPXTD5#QSF;sBRc^#hR,OF&R.$I3ReWBISG8ZMT(nuRUA1PQ
VYIR[s60LF!6bE;rV6'\e+f3sT_P/SSbS`MS*ug.RIZ_rR":XfR-'h3RdZa@SbSfOT_P5UUA1GWime"j
!8.>Ds7lQfp%[#2Q1(C@TD4uPSG8TBRc^$'R":XCR-'h3RdZa@Sc,/XT(nuRU%kAWU%mWss5j=)s7lQf
p%[#2Q1(C@TD4uQS,f)SS*ug.R=Ua8R%]o0RJ<6>S+rQLT(nuRU%kAWU%mWurrN0"joEU)q"a^Kpo=+T
n"'6Dpm^`@n!UtYWL2M.JXHD'm$Qq'n!a$@pmq2On"9BleGnY2bQ%A5!9j7Bpo=+Tn"'6Dpm^`@n!S`o
ka;:7ig54`ka:M#n!a$@pmq2On"9BleGnY2bQ%A5puqLQpm1B>pmh,Kn!`m:r0`,'ka:1m_jI<gk*b\,
pm_&Lpn$rHpqkP\li?n_eGo=Cq""43pn7DKpmh,Kn!`^5Ss]A@JX=QH\!ZBHn!Ws>pm_&Kn"'6Vq#9+L
joEp2q#:'Zpt,;6qj7;Kpmh,Kn!`^5SsZ(8W0a*Cn!Ws>pm_&Kn"'BZrN>qph>cU;eGo=Cq""43pn7DK
pmh,Kn!`^5h3c'HJX=<ArKs=Hn!Ws>pm_&Kn"'6Vq#9+LjoFoNjo>,PpuqLaplbEAn!`^5_O.HlJX<I)
esPiln!Ws>pm^`Bq!?i:joEp2q"jdLpq$6`pm^`@!L]AGRDP>BQdD(UQbo-YRJ<6GS*umBm.^PCs5j=2
s7lHckkMaaP5(O8RdZZ]R.HYqQ[tLcQbo-YRJ<6GS*umBm+q^(!87DMs7l9^h>!oCPk^^9RHBlfQf+3]
Q^4!)R.?X>RI?U>S+t7as5j=2s7l9^h>!oCPk^^9RHU"=R$`GkK9q.Uo9\:#pmLT>pm_''i;`fVjoEp2
q"=F<po!nOpmUZ>k*W$4JX:qSd$NRUpmLT>pm_''h>cU;h>d9Kq!Rq&pl4a1n!JZmY*X^+M3n%*pR(E;
pp/`UjoF6;q#1!Ups/Yon!WX3d?fENJX:qSk*PP(n!WsVh>cjBq>f@Oq#1!Ups/Yon!WX3JX?"qJX:qS
_jBhZn!WsVh>cU;h>d9GpuV:VplY?=r0Q`9JX2XgJX2spk*Q%6r0[8Sq"j.QjoF6;q"a^Hpp0[WpmC31
\s@o5JX1kQrKcT4pmCiOq"j.QjoFrOmJltWpuV:VplY?=k*LXbh3NVXJX5#Uk*Pk1pnRW\k5Tr
~> 0 40 m 0 0 l 216 0 l 216 40 l h W n EOD
joF6;q"a^Hpp0[WpmC31LmEUXJX3L*k*Pk1pnRW\k5XQDh>d9BptPS+rf[/Apm-JrOHkB^JX-(sn!<a8
ptb*4joF6;q"4@9plY?7pm/7OJX(eOJX+iPn!<a8ptb*4l2^b_h>d9BptPS+plbE<JX+fOJX(eO[$C*G
pm:d3k5XQDk5Y5Sq!@dppmCi:n<8EeJWkYKJWg+uPPCC;^ZPRY!9X=Vr:oXR`V>hqNg#ZXPC\pKPMDAs
Pk`#Us5j=Ls7u]ir:oXR`V>hqNe*D&PC\pKPIZnPPk`#Us5j=Ds7lEbjS6+WPPC*iOF`LEOF`LQOSH!X
rql]`s5j=Ds7lEbjS6+WPPC)fOSk2kOF`LEOQqr&Y5&"bs5j=Ds7lEejSn68[.oj[N.I(_OF`LEON3IX
Y5&"bs5j=Ds7l9^h"\2MOnajaNUMgWN.Hq=N7s6ZNUMi$NVJG,[J9[hrrE)]!9X=Vp%[>;ZM9RWMq!`L
N.Hq=N44c7NUMi$NVJG,[J9[gs5j=Ds7l9^h"\2MOTCAuqMWj_JW.!qJW,hPmu7=+n;R.%pl"pTq#'U\
joFlMq#:'Zpt,;HpjDjfmt^[mbD6"MJVJ`1Q%meDpkJ6mpkJQgptYZ?n,M\RquH3cq#:'Zpt,;HpjDjf
mt^[mbD2^EJVJ`1nqPYLpkJ6mpkJQgptYZ?n,MMMn,N1^q""43pp0[Bpjqsj!JcI*L<G@'L;J[rL<kV(
L\QVmL\li*LA6#gh"^^6s5j=Ms7lTgnbC]1Z1sOXFSK\IDYRuAAb]d1@`i,1@=_jU@II\#AGBj5D=;B;
ZhWVVq="@G!:Ts_rqQ$Yf(cNFPPB7pD"qoCCA;B8A,'Ma@I7KS@=_k]@II\#AGBj5D=;B;ZhWVVq="@G
!:Ts_rqQ$Yf(cNFPPB7pD"qoCCA;B>A,Bd2@Y%sL@=_k:@II\#AGBj5D=;B;ZhWS^q>'m_n,MMMn,N1^
q"+:8pp^$cpkJQrpjeETJU`6#NIU_SpknjAprN6oq"jIZjoFlMq#:'[r7h2)pp^$cpkJQrpjdpFZ@@FT
JUcs7pjr3tpnRW*puqMLn,MMMn,N1^q"+:8pp^$cpkJQrpjgnEJU`6#JUb^ipjr3tpnRW*puqMLnc&Xi
s5j=Ds7l?`jS6aiW;)VPMh-`RM1LM7M62X0MYN8-SbTYgfD+k1rU9dK!9X=Vp\<hE`qZJ4PkgR=Mh-_J
M1LM@M>2u'O8,:@[eSJLnG)tNs5j=Ds7l?`jS6aiW;)VPMm\CmM1LM7M<B`jMYN8-SbTYgfD+k1rU9dQ
!;ccYs7lNenG(c5_YC;/Uk,2kTRibeTZ!MuUA1__\bOPHkkOr8s5j=Ds7lNenG(c5_YC;/V#-g9TRibe
TV8%RUA1__\bshQd.li"pu_V=!9X=Vr:odVg\AY\Y5"faTRibeTRid8T_P8VWVF%!d.li"pu_V=!:^$V
s7lHcn+bi9e+h)\`q[N(`7)YU`.>kf`;%=HaS=*Vg\C(/pA"UKs5j=;s7lHcn+bi9e+h)\`q[OH`.>jX
`.>kC`;%=HaS=*Vg\C(/pA"Rds6'FE!8[\MqY9OSi:tdrb4s!O`L4Yq`.>ju`;%=HaS=*Vg\C(/pA"UK
s5j=;s8DrprqQBcp%\"NlM0Onk-O3$k(2[lk4n-7l1jZ@oD&.Vrn[V:!8[\MrqQBcp%\"NlM0Pnk(2ZG
k(2[Ik4n-7l1jZ@oD&.Vro!hUs5j=;s7lTgqtTjZn+c2CkCMdkk(2ZGk-a@HkP4<:mJ-;Jq=ssFs5j<u
s7lQfr:p/?qOID5qMG(EqZ-NgrV6B8s5j<us7lQfr:p0(qLSKoqLSM*qY9s_rV6B8s6Tg_!5ed2rV6<c
qgnV'qLSKoqSW1)qtU-brlb?(!3?-Ns+13$s+13rs5j<4s3CXqs+13$s/c7_!:g)?s+13$s+13,s*t
~> 0 40 m 0 39 l 216 39 l 216 40 l h W n EOD
joBu4SH"0?JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcCT,J,
~> restore
ep
end
%%Trailer
%%EOF
