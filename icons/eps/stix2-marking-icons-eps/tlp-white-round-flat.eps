%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 120.959996 120.959996
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.3 (Build 18D109) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 121 121
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 121 121
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /b put
dup 34 /r put
dup 35 /e put
dup 36 /t put
dup 37 /space put
dup 38 /j put
dup 39 /o put
dup 40 /d put
dup 41 /a put
dup 42 /n put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/space 1 def
/a 2 def
/b 3 def
/d 4 def
/e 5 def
/j 6 def
/n 7 def
/o 8 def
/r 9 def
/t 10 def
/uni2B91 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec

6DDBFD643819B7E91A0E0B4DC00F0AE7C8F2EE12D0CE555EF319B9CFF33D9EE41EEDBB07A6AAB57DAB57CD1FD8A7B2A64EFA87DFD0F2C246322D661370BA5356CE2CE8BF42C3D1229AB58782D4915A30EA83D098551592360A3838A2CA4C7CB845158A9E74371DA0729F8FD546298BA39BD6526C13CA12A33BF0E562E7AA92ACF8CA64B059560ECBD7009F907F0D96F9E11018D365571B19274EAC2ECE70DC89275100DED4F710A2666B726B8147C84E621870426A3DEB395754FBE19636B0BCD3537F4BA24B23A3F506C91C78FCCFA8CB73745FC132CD40C8CF72506D4F953891D53E4D2473C00BF4380550F335E9564298F9D2237D4DACF3D26F89C0D65DDE9031D8863DE01AC0453D0C330D6BD7A433FCC4F7EA2096652710F83F2868E10F855F07152A2DFA3337D98C0781660A4EF5B8AFE0A9ED825E686B3E65D2AB0861E2C735B53A93F70F21C74DB9D289159C37933A99E5D3F5F1C54B6B4B6813BEDF6943983CE62F0A1D117EFC581FFCC47351147EAEF65C9AD3917A7B002DDD2E42A575F472DFB2F170B4099E167FC9DB88BF2FD7D36D42C2E02377BB2607AD2CA3D325B9603C4C348F9BF26FA8B1BB67061C8AC184B721E3D0558E496A98A31D230EF96E5CC1DB8E354F9F6F283678DEEC185FC40C6F38A2B22429E327707470CB0601D5BE681374E9740E7EEB112EA89B0AC0E3B51D6C964C637DA824186BA4EEB30ECDE66777EEB4D3E958D05323B8AA6ADC8EFEAB9036F5810E1110677475B45C45708E77209812B2225A956A30C7CBF2206F9C4261F0710E3621B6C8A2CD8171F054A5B03BC9CFC504457C6208B84EF8D751D0E561C2B9EA2C37C7205E507620C85D1D4704AF913A86849C71AA9D57C6F28F42D1527118FEFCC970807B136BCF6C15196AB1A7A6D144494672871FA5846124386C2737A7778099B2A1E0E974041EB7698D28DADE48D9ADAD431810016C0540AFCFD1AA06B20D86459658BECCC1EFD08A80DB4E64B563471FE568C01BE5EAC20594378F61EEF3D3FFFB30AC85EC78E87216BBE9DB823E9BB064A026809001C8A730EA2B2D24C13A1706BE63BD38D131A0E811471F7E01B52721EBDC6AEB261C3CE12DC339A623368F85CB19FAB9415FBCAF8E68C32EADB8A5E2B82A620A138F2F58ECDC44B9CF889D209D7B6526EA34832440459F3832E11CAA167031CC0FBF8EBB5A01A88DB12B203E6559ADB2DEA970F21FE4CC1A011384CD4991CE3B6BED24D609265F1D34708748167CFE2028D7266F55C3428753E4A8A9684E8217F4AF247F7EAA32DC3A11E3A91F2CCE786AE1BD851E19045349954E226B67E029A6A755E7BFEB86E3F63A4DF74D895AC295B44D8EBDB3695CDEB6F9563D1DFC3C53FF0FB23F651D9E6C13216FD468237692802EF908982CCA4C2C449341229E1733C7F80C0744775C378D957797CA62
C90615FD67ADF8DC02D4BBD6CDBC8B703BE302F81CA05704F28932CD738342D893964E8E6BC01F51F4DE0CA33EFA8AEFA54E7541E9E2161359C74D173360EBEF899E0AF21654F861ACEABD7E7A2F84862E0E4592544F3E1D74A98A52693BCA92013C14B79332A5934C90021A77E8C2983B83D4D213B676AC591AFA5007D085F5F0C4081B8CC7A64E3732668704F54DC7C6C84F7C18B325FB4BB3255436D618C5783C261037FDB512872A82E3A43650B2325CF9DB374710D6F8BD86FBD832DA3BE94F9652B32DBA9AC0FEE2F383E74822CAD8D68FE7C51DDF751455D189FF90365D67E6969C1A46E13E6CB119855CF35C9E0C44EB0F68737B8F77AA3CA8E8E0CB921710337D99F3E3EF3C422D2041780818443ADDAB2B3FEFDAFD77FE88FDDA2A585E8B8484A7C01C0EADDFC69C6C027EEF7EE080762B18C85543FFE5E90E226086B6A19BD416BA4E1D2E2E01073730D6816908498114CCCFB881A615FA42F29A0B92AD1E15E460F60022CAC1639DB0EB70CF049BFF2D86483AB24CF540DE986BE69372E572AA37FFB9A0FDD763ACD699110D01042D079B80119BA93939266A5B31F92A653E8418C9F4F2FF02FE72ECF8EDC9BFF93F019AE44E58723699E039EE8F63F5FB88AB14160A5A9F1CB010876B5ED90421327C4F904A2E588E7015C98640D3216B1E4EC27C6137C9D291E2F5CDA53F682FE6684EC7B7887B274A3B97B1DB8E4537E76E085B591A188B7C4B45BD3DF715E4AF90493958C4104BD9442C30CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: Copperplate-Bold
%!FontType1-1.0: Copperplate-Bold 1.0000.1.0000
14 dict begin/FontName /Copperplate-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /T put
dup 34 /L put
dup 35 /P put
dup 36 /colon put
dup 37 /W put
dup 38 /H put
dup 39 /I put
dup 40 /E put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -581 1 index div -288 2 index div 1743 3 index div 928 5 -1 roll div]cvx def
/sfnts [<

1134262735213236373315232E0123211533323637331501DB020D0FBA01410808020C0C020808FE0D1309091301F30808020C0C020808FEBFBA0F0D020CC00A0D5D0B13AB0D060C02090701D20709020C0B11AE110B530D0A9C000000010051000002B9020E002B006BB8002C2FB800092FB900000007F4B8002C10B80015D0B800152FB9000C0007F4B8001FD0B8000910B80021D0B8000010B8002DDC00B8001A2FB800262FB800004558B800042F1BB9000400083E59B800004558B800102F1BB9001000083E59BB00210001000A00042B3031251416171523353E013D0121151416171523353E0135113426273533150E011D0121353426273533150E0115029D0913CE1309FEFC0913CE13090913CE130901040913CE13091E0709020C0C020907B9B90709020C0C02090701D20709020C0C0209079F9F0709020C0C02090700000001005C0000012A020E00130022BB000E0007000300042B00B800082FB800004558B800122F1BB9001200083E593031373E0135113426273533150E01151114161715235C13090913CE13090913CE0C02090701D20709020C0C020907FE2E0709020C0000010051FFE90279020E0019002CBB00190007000E00042B00B800132FB800052FB800004558B800092F1BB9000900083E59B900000001F43031253236373315232E012321353E0135113426273533150E011511025B0808020C0C020808FDF613090913CE13097A0B11AD10070C02090701D20709020C0C020907FE8A0000000002005100000276020E000800230065B800242FB800032F410700090003001900030029000300035DB8002410B80012D0B800122FB900090007F4B80007D0B8000310B9001D0005F4B80025DC00B800004558B8000D2F1BB9000D00083E59BB00180001000600042BBB00000003002200042B30310132363534262B0115111416171523353E0135113426273521321E0215140E022B01019B2A27272A980913CE1309091301662F4830181830482FB4012B1C201D1A73FEF30709020C0C02090701D20709020C1B2E3D21213D2D1B000001001C00000246022A001F0052BB001A0007000300042B00B800004558B8000A2F1BB9000A000E3E59B800004558B800122F1BB90012000E3E59B800004558B8001E2F1BB9001E00083E59BB000E0001000500042BB8000510B80018D03031373E013511232206072335331E0133213236373315232E012B01111416171523CA1309AC0808020C0C02080801EE0808020C0C020808AC0913CE0C02090701760B11B2110B0B11B2110BFE8A0709020C0001001D00000393020E00640080BB00550007006000042BB8006010B80026D0B800262F410700060055001600550026005500035DBA005B0060005511123900B8000F2FB800272FB8003F2FB800004558B800512F1BB900

00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/colon 1 def
/E 2 def
/H 3 def
/I 4 def
/L 5 def
/P 6 def
/T 7 def
/W 8 def
/u1FFE 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-581 -288 1743 928}def
/UniqueID 4390346 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B4F1C51BADFF3495C2924BE71970B75EDF2A199B50F98194813A33F0031D51718A2986D69347E82428C09BED062C2BB227B0D90F56910618406C8713FA9BB036C51282886CEE290408D09AFB5C28402F60176F03D13A070FB0211F4FA30E2B12C24A57BD8443BA6ECD9EFB5D89A1412B3DBDEC286A041746BFA7F6DEFC1280D064C294C32BEFF1C1A0D9575E3EC36179A4ABDFDF3AA36741F1CFE6DA7CAD9ACAEF5A691212ED3249B5589764C72EB70E6077AB0A1F5F0020C99A4358733126AE148CE1BA9DF068977AD34D19052FF7E1C9DD685165B99FB89DD27C03A6D4DBE579BE8677AD0A23CFDF64D311C971D6E56B97C9DEFA3FDDF32A03DABAC4452BCC424AD54054115032B4B2C81BE3D2C320393FD1625FA1F6B642A8B384A6004B7E96EF3491FE92E640E7A5AD55E2B1CE582E3925AE872C3AEFDC663DB9BF66E23831743A85A80554D2566E2F3055BABDE6DB7C7D0BE784E47864DB960D914C90289E0C6B121D070469FBC9BEBD93B0A1EE97F6B3C472DB2D9A9EB110E0025C21D2C4660DDDD4CF7300F19ADD1AAC09EF411C605D61DF67E453BB0A4685DA1FF9347B1D4A64DF3F1CB93316B3FB75186717FE442E8125F8BB38C7F30E58B6E6B6A4D7D1E77134F759670733AAFC1B75F201AD78882A8E1E985E3D6EF75513305B4F8F09A2857468239702969636A7B92CAA4DB0CDF279C35912600C909C977AD99EBDE3969FC3161E1029F360F4F3CC103C2527C457010FA1290AD953E1B97172AE

61E217F1A56E101C4D5F9AA51C88958190891953C3427B02E4358703E226AE6EB75D83D15BDCD7B9B90B6442EFB1EA73CF7982716F6FE29663311BF7FC21D34D0BF16F7382CD57BA6AE4C0C701C97746F5F1786196C3E5A02F31B448085AD5DEDCB59602CDF052CA359D736017A88F7011037406E8DD4873CDB1FE71C67C8507F8FCDFE4956B46A22A8CF857802F024A34207290A95C882050EF0CB7B00E5FDABD13B9133CC8F2CFECE06D8D49B311C8964F89160EE79B3D72BABAFDDA04B696073A83B76E7791B018C48C913C4FAA4CAAA99D9C3A9935372633C42EF57C3A3BB75AF5E2EB5962F642A6A3A45BC5F4395C00FEF81EEB9CD903674BF16A6A5C9FBD98E950B7CEFA9261EDF26DEAA73E62560626370B4025990A6B9A07677951BB7D070803D7B66AA0CC9512E6490D87F9FDADA8B3A3CBD3E207F9F8C3FA549B8E629C3FCE358E1AC9DA5A903645EFFF746FB5CCEAF83FBCE22595A2E982FD8278F33A94E5F074
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Copperplate-Bold cguidfix
/F2.1/Copperplate-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 120.96 120.96 rc
119 0 0 119 1 1 cm
save
1071 45 cg_miaiproc 
322 -35 -28{
gsave 1 357 div 1 357 div scale 0 exch translate
currentfile 0 (EOD
)/SubFileDecode filter
L3?{flushfile}{cvx exec}ifelse
357 36 scale
BI
/Width 357
/Height 36
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource ImageDataSource
/MaskedImage true
ID
EI
grestore} bind for
0 35 m 0 0 l 357 0 l 357 35 l h W n EOD
JcC<$JcC<$JcC<$JcC<$V>o$FMZ88-JcC<$JcC<$JcC<$aoBijk5U#4JcC<$JcC<$JcC<$JcG-;e,Y("
_Z,2eJcC<$JcC<$JcCl4e,Z*?JcC<$JcC<$JcC<$JcE.Xe,]@FJcC<$JcC<$JcC<$JcC<$g&KP%JcF=$
JcC<$JcC<$JcC<$JcG]Ke,ZfSJcC<$JcC<$JcC<$JcDGDi;iKMJcCc1JcC<$JcC<$JcC<$`W+EfJcG$8
JcC<$JcC<$JcC<$JcG!7e,[MgJcC<$JcC<$JcC<$JcC`0o`3nMJcDJEJcC<$JcC<$JcC<$Z2`;RJcG`L
JcC<$JcC<$JcC<$JcF:#e,\5&JcC<$JcC<$JcC<$JcC<$q>\qEJcE1YJcC<$JcC<$JcC<$Sc@1>P5g+5
JcC<$JcC<$JcC<$_>i!bmf.k<JcC<$JcC<$JcC<$JcFj3e,Y("b5[%mJcEOcrr2oqqu$6dq"k!cq"jd_
qu$Hlrr.KKJcC<$M>u'*VZ25IJcC?%rr)inrqcWhrq??arq-3]rpm_lrpp'[rq-3_rqHEerqcWlrr)`o
JcC<$JcDkPeGoRLJcC?%JcE@^rr)inrqZQerq-3\g$u$2rq$-]rqHEfrql]oJcG*:JcC<$dJq\rJcFU,
JcC<$mf3:arqZQerq-3\JaqOcrpp'\rqHEfrqtCJJcC<$JcGECe,[)[JcC<$U&Y,jrqcWgrq-3\Jar7"
cgh#*rq-3arql]oJcEUeJcD/<klC&MJcD&9JcF-trr)ilrq??^^%$[DjRN6@rq??frr/qtJcC<$^&QR^
JcG<@JcC<$rr2oorqHE`Jan`ir:0dXrqHEhJcCf2JcF^/e,[eoJcC<$Y5eM"rqQKbrpkX1i:30(rpp']
rqZQmJcGKEJcCH(r;bIMJcDbMJcFL)rr)ikrq!AaJaor6rq-3crr(XPJcC<$WW1HJLAui)M#[JPrqHKb
!V>o6nUpASnc&1[q#:5Cs2"_ds3:Sn!94$0s+13Xs8N#sq>U#;n^d5]n`B<?o`"^drhf^Hs+14?s3q%"
s1\Mas53kUqu69fnuVA4nUp?4o'ueOrq??gJcCQ+Q2f>6Rf@s=N;rnUrqHE_!V,]2nU^5%nc&.Zq#:8D
s6]i;s1/0Z!;?GDs+13Ys8Mrqp&=N5n^[/\n\"Dko)A@^r6PCos+14+s3q%"s3gpus5<qVqYp,cnU^4]
n^m=1o`"]<s0;TTs3q%Os+130s8N#sq#9j`nU^4]nU^6'nc&.Zq31i0s/#bO!;HPFs,-ics8N#sp\s`7
n^R)[nWWMBo)AFWs+13$s2k;j!.k14s+14/s8N#sp\s``nU^4]nZhW`o)AF`rdk+'s+14;s3q%cs+13.
s8N#sp\s^`nU^4]nU^5Vnc&+Yq#:9*s+134s*t
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Y("Y5b-orr2okrpkX1m.#YsJaqdjrpp'`rr.KKW;i^oe,YC+JcEjlrr2olrpmqrJan<]Jara1rqM9K
JcEjle,\Y2JcC<$nGiL`rpkX1R.5atTCMpPrqbmZJcC<$mJkZ9JcEUeRfEBarpt^2mdYkuJapGDrq-3f
JcEpnOoNo2T)XBA`;fi7rq45"Jan<]JaqLbrq??iXoEtP[K"_VqYu-HJcG0<rr2okJao3!Jan<]r:0dW
rqM'EN;qT2e,Y("f)M$8rqcWcJar@%Jan<]RdpCKrqh9Hmf.k<rVt@IZN#LU^]4<3rq4D'Jan<]Jap8?
rq??jd/S[sU&X'OoDjIBNrS8ArqZQaJaoK)Jan<]g%#(4rq_3GYQ)TAe,Y("lMltGrr)igJarO*Jan<]
JarL)rq69hOoL"4l2T65`rCVi\,ZI'rpnJ,Jan<]Jao,trpp'bnGe(>NW8YOhuJ?.UAs3Prr2oiJaoZ.
Jan<][dj@jrr.KKdf6TPe,Y("rr7fSrqcWbJaia1Jan<]Jaq@^rq$-dZ2]CTec4,!gAca(ZN'q'rq=q5
Jan<]Jan<]p$r%UJcCi3q>\qEJcE1Yg&M'Lrpt^2YOR26Jao&rrq-3gJcG<@Sc@1>P5g+5!<<&orpkm8
Jan<]Jap5>rpp'cdJndt_>i!bmf.k<VuQbihXQ0eJan<]Jaq:\rqD!DYlEhbe,Y("b5]lhrr)igJap5>
Jan<]JarI(rq69iP5gC=e,ZBGJcGNFrql]cOR[nlJan<]Qgt(Hrqu<dJcDkPeGoRLJcDDCrqPXGJan<]
Jan<]\FKRhrq_3Gd/VMne,Y("hZ(Uqrq:p5^[ZmFJan<]f(&b7YQ'1Rp&EMA])R?]nGiLerq2ZKJan<]
Jan<]p[S7VJcDVIklC&MJcDhOrr)ifnaV2#Jan<]Jao,trq-3hJcG6>^&QR^JcG<@^An31rpkX1b41&Q
Jan<]\af[jrr(1CJcF^/e,[eoJcFj3rql]cU[`p*Jan<]JaqIarpp'dJcE%Ur;bIMJcE.XrqcWbr:,@.
Jan<]Jan<]qsj[VrqqcUWW1HJLB"U[rqcWbJaq:\Jan<]Jao9#rpp'cm/MY:c2Z8nir=T0gAh0JX7:c2
Jan<]JapGDrpp'bJcEpnnc.)=JcEIarqM'7K^jW`Jan<]hXUU9rq`YpQ2f>6RfB>drqD!6h=6'dJan<]
Jar[.rqV-F_>i!bpA]^Dci="=[deq=Jan<]Jao<$rqV-Fkl9K=e,Y("df9%@rqM'7O7@ekJan<]^@D4!
a8^_je,ZZOScA]bJaqsoJan<]Jan<]ipm$=rq_3Gb5^8tp],mFc2[e=_=<*HJan<]JanB_rpp'cL&]9p
e,Y("k5XcIrqcWbJao<$Jan<]JaoQ+rpp'djSsf2mJkZ9_Z,f!rql]cJarI(Jan<]Jan<]`UWrurqq?I
e,Op
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Y("e,TFErpo(=Jan<]Jan<]JaqF`rpp'dYQ(I!e,YC+c2[e@rpkX1]CCIBJan<]JarU,rpp'eJcF=$
e,\Y2JcGBBrr)iePjs=pJan<]Jao6"rq$-gJcG-;mJkZ9JcFO*rr2ogmI>btJan<]Jan<]]^c!nao@M'
e,Z*?^]4<+JapbMJan<]Jan<]h=:L<JcFO*e,]@FJcFm4rq;uSJan<]Jan<]Jara0rqM9Kg&KP%JcFa0
rqQ9YJan<]Jan<]JaoB&rqbdWJcG]Ke,ZfS[/^.%Jaq.XJan<]Jan<]_t!`srqq?Ijo=9>oDjIBkl:Y\
rpm2]Jan<]Jan<]Jaqgkrq$-gV#SF6e,Y("lMgnbs8MV@nV6RbnU^4]nV-N4o`5#Cs69R5!65&9s8M_C
n_`kfnU^4]nU^5-nc&96s6K^X!8mj.s6fpdq7,sGnU^4]nU^4]n]12!qnE*8s3q%"s8N&js8Mrqnq$=q
nU^4]nU^4]na#`Eo)AT=s7--=!8@IBs8N#so7?H!nU^4]nU^4]nVm#;oR[&<s7u]E!.k1Bs8M]2nU^4]
nU^4]nU^54nc&:8s.02>!0[BEs8MhFnXo?&nU^4]nU^5Unc&E:s7cQC!:KlHs8Murnq$?.nU^4]nU^4]
nU^6$nc&.Zrg*TGs3q%"s8)cpo[ND^nU^4]nU^4]nWWMBp@A6?s3q%Gs4IANpjqt;nU^4]nU^4]n[.ic
qLS\Fs4%)L!.k.Ms8MrqnqlmfnU^4]nU^4]n_!C2o)ATls3^kr!.k.Ms8MWLnU^4]nU^4]nU^4]nbM_S
on!,Cs3q%[s2tB@pjqtInU^4]nU^4]nXB"IqLeh4!:0]?s8MurnsAltnU^4]nU^4]n\4Pmo)AX2s1SH^
!/COQp$hL&nU^4]nU^4]nU^5fnc&6:s3q%os1JC2qLS1YnU^4]nU^4]nU^31nc&EBs8;rM!0$sWrr2Jb
nU^4]nU^4]nU^5+nc&.=s/H%J!0$sWpAXT5nU^4]nU^4]nU^5Lnc&<Bs3q&.s/uD$r.4CinU^4]nU^4]
nU^5pnc&+YrLa,[s3q%0s8MYsnU^4]nU^4]nU^4fnc&7Zs-<W6!1Nr`s8MkGnVm!hnU^4]nU^52nc&HL
s3q&Bs.02ho7?GqnU^4]nU^4]nU^5Vnc&0hs5!_)!1!T`pqcKOnU^4]nU^4]nU^6"nc&BMs3q%Os6K^a
rr2J>nX]3$nU^4]nU^4pnc&-Fs4m\M!1<fcpOVl.nU^4]nU^4]nU^5<nc&=1s2k;j!1X#frVlB9nU^4]
nU^4]nU^4]n_*I3o)AWXs3q%cs4[MPp4;b7nU^4]nU^4]nU^6,nc&<Qs*t
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Z!<rq;]KJan<]Jan<]JancjrqQ6fV>o$FT)\fgrpo[NJan<]Jan<]Jan<]ZLRqbrr/Mhe,\Y2\c;[&
JaptSJan<]Jan<]Jaq4ZrqNf!mJkZ9U&Y,jrpm#XJan<]Jan<]Jan<]p[S7RT)[:?U&Y,dJan<]Jan<]
Jan<]R.:1NU&WUBqZ!Vrrr2ofJaqRdJan<]Jan<]JapDCrpn22g&KP%V#UGg[deq=Jan<]Jan<]JaqRd
rqWAie,ZfSpAb-krpkX1P4=+nJan<]Jan<]rpurci;iKMVuQblJar'rJan<]Jan<]JaoK)rqb[T`W+Ef
VuQbfa74`NJan<]Jan<]JapbMrq*,ge,[Mgjo>>WJaoE'Jan<]Jan<]Jaqpnrqrero`3nMWrN(jJar[.
Jan<]Jan<]JanZgrq?3gZ2`;RXoJCuea\4\Jan<]Jan<]Jaor6rpp'fXoHlNgAf\&rq:p5Z13D8Jan<]
Jan<]d..,1[K$(&e,ZWNrpl'=Jan<]Jan<]Jan<]o^VqPXoHlNYlF_!k4+#mJan<]Jan<]Jao#qrqir"
e,\q:_uK`.JapVIJan<]Jan<]Jap;@rq=S9jo<g1ZiC%'S+2("Jan<]Jan<]JaqRdrpp'fZiAMTZiC%"
p[Nh)Jan<]Jan<]Jan<]rpg!aZiAPU!!'A*rpt^2e+&"ZJan<]Jan<]U@J6Tj8[O,e,ZrWrqieeJan<]
Jan<]Jan<]_t!a)[f=hW])Va/rq:p5M"-&dJan<]Jan<]kOJQH[f>Rlli=KorpkX1jRIfkJan<]Jan<]
Mt-f=qZ"8/e,[&ZrqjD!Jan<]Jan<]Jan<]XRZ;g\c:.ZcN!82rqD!6RIPjuJan<]Jan<]d..,2\c;U.
fDrJ^rpt^2p$mV'Jan<]Jan<]JarC&rq*c$e,[/]rqt(3Jan<]Jan<]Jan<]Q1=kQ]`6I]ir@d5rqD!6
WptZ1Jan<]Jan<]\af[pbl@55e,[/]rptm7Jan<]Jan<]Jan<]h=:L;]`6I]^]4<3hsl9fJan<]Jan<]
Jan<]rpm`%e,]4Bb5_J:JapABJan<]Jan<]JaoK)rqkaUh>bt)^]4<+QgoXsJan<]Jan<]JapbMrqF2-
e,[8`rpo[NJan<]Jan<]Jan<]Jar$qrq!o)h#R3M_Z0W5JaptSJan<]Jan<]JanZgrr2coaoBij_Z0W1
W:>H/Jan<]Jan<]Jaor6rqaM3e,[Acrq(d3K^jW`Jan<]Jan<]e+*G2_Z,,
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,[Acrq(d3nF;)"Jan<]Jan<]Jaqpnrq=5/e,[Acrpn;'Jan<]Jan<]Jan<]Mt-f<_Z/*ck5XB>rqq?;
V=B-,Jan<]Jan<]XRZ;hg&LI>e,[JfrqV-8Jan<]Jan<]Jan<]d..,4`W+Ef`W,r2h=6'dJan<]Jan<]
Jan<]o^VqT`W+EfqZ"e>rpt^2\ab7@Jan<]Jan<]R.:1JmJkl>e,[Sirr/)NJan<]Jan<]Jan<]]^c!l
`W+EfaT)8:mdYkuJan<]Jan<]Jan<]h=:LBaT(3!oDlu4rqM'7b41&QJan<]Jan<]Jara8aT'`iaT)84
VX]6-Jan<]Jan<]JaoT,rqFM6e,[Si!V>m_o7?F`nU^4]nU^4]nU^5Pnc&1%s7HBM!6bEArdjUonU^4]
nU^4]nU^4]na5lGo#Uj\!6bEAr3u3InU^4]nU^4]nU^4jnc&O2s3q&&s763hqLS1#nU^4]nU^4]nU^59
nc&F7s7u]E!6bEApOVl'nU^4]nU^4]nU^4]n^d70q9/ff!6bEAoullVnU^4]nU^4]nU^4]nbVeTpWNTd
!:KmDs8MV@nYbo.nU^4]nU^4]nXf:Mo]Q89s3q%ls+0\?nU^4]nU^4]nU^4]n\Xhqo?70`!7(WDrS6po
nU^4]nU^4]nU^4]n`0/_s4%)L!7(WDr.4CJnU^4]nU^4]nU^4cnc&Lds3^kr!7(WDqNUN$nU^4]nU^4]
nU^52nc&I3s3q%os8Mf_nU^4]nU^4]nU^4]nU^5Vnc&C1s60OM!7(WDpOVkYnU^4]nU^4]nU^4]nal;M
ps/oh!7(WDor.D3nU^4]nU^4]nU^4snc&:.s3q%os8MYAnV$F`nU^4]nU^4]n[n>jp!3U9!8%:ss8MV@
n_iqgnU^4]nU^4]nU^5fnc&1+s3q%os8MT%nU^4]nU^4]nU^4]nUpB2o?RBc!94%Gs+0^*nU^4]nU^4]
nU^5.nc&+9s7--=!7CiGrdjV0nU^4]nU^4]nU^4]n]:7Gs3q%rs8MuAnU^4]nU^4]nU^4]nU^5snc&O8
s3q&Bs4mYRr.4C;nU^4]nU^4]nU^4lnc&L[s5!_)!7CiGqh=QknU^4]nU^4]nU^5;nc&I6s3q%rs8MlR
nU^4]nU^4]nU^4]nU^5_nc&I6s4m\M!7CiGqLS1MnU^4]nU^4]nU^4]nbhqVqpGGn!7CiGq3gc(nU^4]
nU^4]nU^5'nc&F5s3q%rs8MienU^4]nU^4]nU^4]nU^5Knc&F5s*t
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,[nrrqV-8iUMKhJan<]Jan<]JaqC_rqk+Ce,[nrrqX7tJan<]Jan<]Jan<]Jar[.rqb%Be,\Y2m/R([
Jao/uJan<]Jan<]JaoE'rqbaVmJkZ9dJs4@JarF'Jan<]Jan<]Jan<]`:<j'dJq\rdJs4@dIDeXJan<]
Jan<]Jan<]kjeZJdJq\rqZ#4JrqM'7Xmpu4Jan<]Jan<]N:HoDq>].Je,[nrrqM??Jan<]Jan<]Jan<]
Yjq_hdJq\rdJs4AjmdolJan<]Jan<]Jan<]eFEP7dJr/*oDm;=rqV-8_=<*HJan<]Jan<]JarO*rqk+C
e,[nrrqW,TJan<]Jan<]Jan<]SFQUUdJq\rdJs4Bq=0%+Jan<]Jan<]Jan<]_"%F$dJrk>huM1)rq_39
ea\4\Jan<]Jan<]Jaqgkrqt1De,[nrrq`niJan<]Jan<]Jan<]M"1KBdJq\rgAgsJrqh9:NU_SiJan<]
Jan<]XRZ;gg&LmJe,[nrrqq?;l1'>pJan<]Jan<]Jaq+Wrr1=Fe,[nrrr'h+Jan<]Jan<]Jan<]JarC&
cMuAomf2AJrr.K=U%*^(Jan<]Jan<]S+6LKlMouGe,[eorpkX1!:bX1Jan<]Jan<]JapMFrq"G8e,[eo
rpnk7Jan<]Jan<]Jan<]Jaqdjrq+M9eGoRLcN!n8Jap8?Jan<]Jan<]JanNcrq69jdJq\rcN!n:Pjs=p
Jan<]Jan<]Jaof2rq=Y;e,[eorq>jOJan<]Jan<]Jan<]Jaq(VrqOe=klC&McN!n=JaptSJan<]Jan<]
Jan<]oC;hVcMuAocN!n?W:>H/Jan<]Jan<]Jao)srqk"@e,[eorqh9:K^jW`Jan<]Jan<]]CGn!cN!hC
fDs4srr%E<i:2BgJan<]Jan<]JaqXfbQ$&lbQ#6FJan<]Jan<]Jan<]L@P96bQ$&lirA<DrpkX1S+2("
Jan<]Jan<]Wq$)\g]-gDe,[\lrq1j4p[Nh)Jan<]Jan<]Jaq%Urq=P8e,[\lrqFn3Jan<]Jan<]Jan<]
Jar=$rqXb;e,]4Bf)PaFJaor6Jan<]Jan<]Jao&rrql0ah>bt)bQ%S>Mt)AgJan<]Jan<]Jap>Arr(%?
e,[\lrr2*NJan<]Jan<]Jan<]Jaq^hrpn/1h#R3MaT)81JapbMJan<]Jan<]JanHarq$3jaoBijaT)84
U@Eg)Jan<]Jan<]Jao`0rq=G5e,[SirqHE^Jan<]Jan<]Jan<]Jaq"TrqXY8J,
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,[SirqD!6lLBGqJan<]Jan<]Jaq^hrqXY8e,[SirqaY)Jan<]Jan<]Jan<]L%50?aT'`ik5XKArr%E<
U@Eg)Jan<]Jan<]XRZ;\g&LI>e,[JfrpkX1Jan<]Jan<]Jan<]d..,-`W+Ef`W,r1h=6'dJan<]Jan<]
Jan<]o^VqT`W+EfqZ"e>rqM'7\ab7@Jan<]Jan<]R.:1PmJkl>e,[Jfrqr&OJan<]Jan<]Jan<]]^c""
`W+Ef_Z0W+o^RM&Jan<]Jan<]Jan<]j73->_Z/QpoDlc.rq(d3d.)\WJan<]Jan<]L[kB;rr9t;e,[Ac
rqNSbJan<]Jan<]Jan<]X7?2b_Z/*c`rH#;rqh9:M"-&dJan<]Jan<]cgh#5_Z09/huLOlrpkX1kOF,n
Jan<]Jan<]JarI(rq!o)e,[8`rq42!Jan<]Jan<]Jan<]RdpCO^]2d`gAg=8rqV-8TCIL&Jan<]Jan<]
^@D4"a8bu8e,[8`rr%E<qsf7-Jan<]Jan<]Jaqjlrpp'f^]2d`]`8!&g@9aaJan<]Jan<]JanTerq*l'
e,\q:ci="=Jap2=Jan<]Jan<]Jaol4rqP.Gjo<g1]`8!.P4=+nJan<]Jan<]Jaq.Xrr'M0e,[&ZrpoUL
Jan<]Jan<]Jan<]JarO*rq!]#eGoRL\c;[&Jaq"TJan<]Jan<]Jao9#rqPaXdJq\r\c;[+WUYQ0Jan<]
Jan<]JapPGrr'D-e,[)[rVulfJanQdJan<]Jan<]Jaqpnrq!SuklC&M[f?@#JaqgkJan<]Jan<]JanZg
rqQ?i^&QR^[f?@(_"!!GJan<]Jan<]Jaor6rqs5)e,[eok5YGOJaoB&Jan<]Jan<]Jaq=]rq*Psr;bIM
ZiC%!JarX-Jan<]Jan<]Jan<]qXOR\ZiAMTZiC%'fC=F^Jan<]Jan<]JaoH(rpp'fZiAMTir@@)rq(d3
[deq=Jan<]Jan<]`UWs#_#Ns)e,Z`QrqV`IJan<]Jan<]Jan<]l1+cMYlE2QYlF_%rpoULJan<]Jan<]
Jan<]OR`>@XoHlNpA_Z&rq:p5c1-ATJan<]Jan<][.4.idJr&&e,ZWNrqrbcJan<]Jan<]Jan<]g[Y:6
rr&u!e,ZZOrVulhJanQdJan<]Jan<]Jaid2nc&3]s4m\M!36(uqLS1tnU^4]nU^4]nU^5*nc&IGs2k;j
!2okro#(!KnU^4]nU^4]nU^5Qnc&0Ys3q%cs5s@\pjqt-nU^4]nU^4]nU^5unc&B_s*t
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,ZEHrqMEAJan<]Jan<]Jan?^!;Z`mqPXAC!2okrrr2KRnU^4]nU^4]nU^4]nYu'Xntc<8!9X<rs8M_C
n](*MnU^4]nU^4]n]gV'ppg@ks3q%Es8MtknU^4]nU^4]nU^4]nauANo)AWas3q%Bs8M_CnU^4]nU^4]
nU^4tnc&9Vs3q&Fs/>tsrIOLpnU^4]nU^4]nU^5Fnc&+YrlP2ns3q%?s8M`)nU^4]nU^4]nU^4]n`00=
pR_E7!4)Xls8MtJnX/itnU^4]nU^4fnc&+Yrgs/K!;$8\s8M\Bnb;R)nU^4]nU^4]nZME]pXfGas3q%<
s8MrFnU^4]nU^4]nU^4]n^[1/o)AWXs3q%gs3q#Ip4;b>nU^4]nU^4]nU^6+nc&<Ns7HBM!1<fcrVlAM
nU^4]nU^4]nU^5'nc&+YrojBes3q%6s8Mc[nU^4]nU^4]nU^4]n\jtsq3D!0!8@Ics8N#snq$>TnU^4]
nU^4]nU^5rnc&-Ks7u]E!0[B]q5Eh7nU^4]nU^4]nW35>qtC&\s3q%3s8N&to7?FenU^4]nU^4]n[@ue
ooK.&!:Kl]s8MnHn`0.jnU^4]nU^4]n_3O4r2]kZs3q%-s8M].nU^4]nU^4]nU^4]nc&9As3q%Gs6'F]
rVlA=nY,K(nU^4]nU^5/nc&.Zrf$m-!!!"Us8MhFnbr!/nU^4]nU^4]n]^P&qRQXRs3q%'s8MZGnU^4]
nU^4]nU^4]nal;MonNLr!4r3Ts8MqIn[S+?nU^4]nU^5!nc&+YrJ(@:!:0]<s8MbZnU^4]nU^4]nU^5E
nc&@)s1SH^!/(=Nrr2N_nU^4]nU^4]nU^4]n`B<?oR[#Bs3q%os0Mb)qgn:cnU^4]nU^4]nVm#;o)AT=
rrE)t!8%:&s8DuspTa7>nU^4]nU^4]nZ_Q_q:5MEs3q%'s7QEko7?FnnU^4]nU^4]n^m=1on!/>s3q&.
s-`odr;Q8<naH"!nU^4]nU^4]nc&(Xo)AWGs7--=!.k1Es8Mf:nU^4]nU^4]nU^5)nc&CFs-<W6!1NrB
s8MYAnZ),1nU^4]nU^5Pnc&65s7H?@!;?GDrrN0"rr)ieM=H/eJan<]Jan<]nF?MLrr/;bh>bt)JcG9?
rqkgIJan<]Jan<]Jao)srpp'dnc+1?e,ZZO_>jN0Jap\KJan<]Jan<]]CGmrJcG0<h#R3MJcG'9rq3&V
Jan<]Jan<]Jaqairq<,eaoBijJcG'9rr)rio)SB5nUg:^nU^4]nVQf8o_e`?s6]j9!5ec6s8Mrqnq$>i
nU^4]nU^4]nZ_Q_o)AT=s60K5
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Y("kl:Y[rpn>(Jan<]Jan<]Jap\Krpp'e`;c\6e,YC+h#IBLJao`0Jan<]Jan<]kjeZLJcFj3e,\Y2
JcG]KrqD6=Jan<]Jan<]O7E5EJcGHDmJkZ9JcFX-rq5IEJan<]Jan<]Jap2=rq=\<OoNo2T)ZS*rq(d3
`pnWMJan<]JaqRdrq1jBh#Gk(qYu-Hj8],XrpuuVJan<]Jan<]K^o'5rr.TNg&KP%JcFF'rqucdJanE`
Jan<]Jaof2rpp'eh>`'+rVt@IZN$d$rql]cJaqdjJan<]Jan<]ddd>-rqq?If)O\/oDjIBe,TFC^[ZmF
Jan<]Jan<]q=4ITrqhcV`W+EfJcG$8kPtPWJao?%Jan<]JaoE'rpp'bkl656l2T65`rCkprqM'7rUGI/
Jan<]Jap\Krq_3Gc2[G:huJ?.b5_J8h!oscJan<]Jan<]lgauMRfBYme,Y("rr:.@rqD!6]CCIBJan<]
P4APHoDaCAec4,!gAca(li6tXRdkt!Jan<]Jap;@rqD!Dbl@M=e,Y("_>jN.q=0%+Jan<]Jan<]i:6g@
V>m+de,Y[3XoJCpJaqC_Jan<]JanNcrqQKmJcERde,\q:JcF$qrqEnlJan<]Jan<]Y4;MeJcF@%jo<g1
JcEmmn,NC^Jao&rJan<]JaqC_rpp'aYlBR[e,ZBGOT5=UJarF'Jan<]Jan<]!V,^Zo)AK:s0_mW!!!"M
s0D\(q>Ts:nU^4]nU^4]nYYjUo)AN;s5O(+s3q%"s5*e(s8Mopnq$>>nU^4]nU^5Tnc&+Yr4Du[s7QEA
!4r2]s7?9ir;Q;QnU^4]nU^4]nauANoD\]>s/c7b!:0]:s/H%trr2Q^nU^4]nU^4]nXK(Jp&=rAs6]j"
s3q%"s762qs8M\Bn^I#ZnU^4]n\Xhqp;?o]s5F"-!7(Uqs3q#IpTj=?nU^4]nU^5pnc&<7s.KDj!8%:&
s/Q+ks8Minnq$=qnU^4]nWWMBo)AK:s7QDks3q%'s-<W`r;Q;=nal:%nU^4]n[e8ioD\^6s+13ps3q&.
s+13Ys8N#sp!WA]nU^4]nU^5hnc&65s.o\bs3q%"s1\N_s8MeEnZhV8nU^4gnc&+Yq18SEs-<W6!1Nq=
s7QEkqu6/MnU^4]nU^59nc&.Zr7:n!s1/0Z!;?GDs-E]arVlH[nU^4]nU^4]n_*I3p&=rAs0)IYs3q%"
s3gqSs8Mfmnq$>\nU^4]nUpB2o)AH=s+14"!3Z?Qs4./Kr;Q;onU^4]nU^51nc&1[rSIR*s/#bO!;HPF
s,-jJs8MbDnWNEnnU^5[nc&+YpjrIPs2k;j!.k14s-3Q_qu62<nau@&nU^4]nb_kUoD\ZIs+14;s3q%c
s+13Xs8N#spXAY`nU^4]nYPdTo)AFEs+134s*t
~> 0 36 m 0 0 l 357 0 l 357 36 l h W n EOD
e,Y("Y5cWDrr2okJapMFJan<]\af[irqM'Eci9jAe,YC+JcFp5rqucfU%*^(Jan<]i:6g>rr&eqJcEjl
e,\Y2JcCH(rqQQb!V5f4nUp@_nVZl9o)ALbs+13$s6]j9!.k0es/,hqrVlJ@n`'(inU^58nc&7]rdk+$
s,m?2!1s4As2=s:qu63*nU^4]nU^5bnc&1[r2p!Ms0_mV!;c_Hs+140s8Minnq$>.nU^4anc&+[q>pHh
JcCB&g&KP%JcF=$KE(rMrqHE_M"-&dJaor6rpp'`JcFF'JcG]Ke,ZfSJcDGDrr)iikOF,nJan<]g%#(4
rqHEkZN#LUU&X'OoDjIBNrQlorqucgJapkPJanB_!V5d]o)A@^rIP!)s2G#f!.k18s+14+s8Murp8d_7
nU^54nc&+YpAY#As5*d,s69R5!65%is+14Is8Murp4;annU^5^nc&+Yp\t,us+130s7HBM!.k0Es-`od
rVlNinq$?%nU^4]nc&+Yp\t/Cs,-i]s3q%"s8N%Ls0r%-rr2]lo$m2\nU^52nc&.Zq>UAEs5<p.s4./!
!8@I(s+13us8MlooRZP@nU^5\nc&1[qm6<Rs+14Gs3q%"s0hrYs7$'fr;QEhnsf0#nUg92ncA=Prq??h
JcCT,Sc@1>P5g+5NrT+XrqZQcrUGI/Jaoi3rq-3dJcFO*JcERde,\q:JcC<$WW2tqrqHE_JaqaiJaqF`
rq$-arr'/&JcC<$jo<g1JcEmmJcE[grql]grpn,"JanKbrpg*`p&Ogcqgnd$s,$d*!2fdIs+14-s8Mop
pAXW6nZ;8enc&.Zp\t&@s4I@&s/l=O!!!"Ms+:9%s8)cpqu6?ho9&Qon_is:oD\L`r2]jKs+13ts3q%"
s5*d,s-<W`rVlWlp&=OXnU^4lnc&+Yp&=ddrVlhJs+13$s7QEA!4r2]s+13Ps8Mopq#9pbnq$>in\F\o
o)A:\q#:2Bs3CXqs-`oO!:0]:s-E\9s2G$;r;QKjp&=O(nU^6"nc&.ZpAXmer1<q>s+13`s3q%"s762@
s+14+s8MurqYp6gp&=N5n^d70oD\F^q#:0irpKf;s+13$s5F"-!7(Uqs+13$s763hrr2ipq>U-fp&=NV
n_*I3oD\F^p\t$gr;Q\Hs1A;^s+ULO!8%:&s/Q*Ms+14LrVl]nqYp9hpAXaaoDA*enc&+YoD\C]p&=^b
q#:-hr;QYHs+13$s/H%J!/CN)s+13-s8N#srVl`oqtU$_q===Uq>:$fqu6NmrVlf3s+13$s+13ps3q&.
s+13$s+13$s+13$s+13$s7--=!.k0as+13$s+13$s+13$s-<W6!1Nq=s+13$s+13$s+13$s1/0Z!;?GD
s+13$s+13$s+13$s+14+s3q%"s3gpus+13$s+13$s+13$s3q%Os+13$s+13$s+13$s+13Hs4m\M!.k0-
s+13$s+13$s+13$s2k;j!.k14s+13$s+13$s+13$s+14;s3q%cs+13$s+13$s+13$s+134s*t
~> 0 36 m 0 28 l 357 28 l 357 36 l h W n EOD
e,Y("Y5a(QJcC<$JcC<$JcDSHe,YC+JcC<$JcC<$JcC<$JcEjle,\Y2JcC<$JcC<$JcC<$JcC<$mJkZ9
JcEUeJcC<$JcC<$JcC<$OoNo2T)XBAJcC<$JcC<$JcC<$[K"_VqYu-HJcC<$JcC<$JcC<$JcFF'e,Y("
f)L=$JcC<$JcC<$JcC<$rVt@IZN#LUJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$OoKq
~> restore
Q
/Cs2 SC
0.91424 0.90701997 0.91966999 sc
q
0 0 m
120.96 0 l
120.96 120.96 l
0 120.96 l
h
0 0 m
W
0 0 120.96 120.96 rc
1 0 0 -1 -383.03998 558 cm
/F1.1[ 4 0 0 -4 0 0]sf
433.84998 548.84888 m
(!"#$%&'"\(\)*)[ 2.372000 1.260000 2.148000 1.260000 1.112000 0.888000 2.296000 1.260000 2.372000 2.148000 0.000000 ] xS
1.4853215 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
469.91995 476.2048 m
466.83759 472.60956 462.95691 469.59836 458.38547 467.46667 c
441.22113 459.46277 420.8183 466.88879 412.81448 484.05316 c
410.68277 488.6246 409.64557 493.42572 409.59531 498.16116 c
h
469.91995 476.2048 m
S
0.74266076 w
466.89243 476.88104 m
464.22476 474.0473 460.98499 471.66241 457.24271 469.91736 c
441.43182 462.54459 422.63785 469.38504 415.26517 485.19592 c
413.52008 488.93823 412.57129 492.84763 412.34921 496.73315 c
h
466.89243 476.88104 m
S
0 i
1 1 1 sc
CM
71.31086 78.627724 m
70.483253 79.173523 69.605515 79.665634 68.680161 80.09713 c
58.476131 84.855377 46.346859 80.440681 41.588661 70.236633 c
41.157162 69.311279 40.801098 68.370102 40.517944 67.420013 c
h
71.31086 78.627724 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -383.03998 558 cm
454.35086 479.37225 m
453.52325 478.82648 452.64551 478.33435 451.72015 477.90286 c
441.51611 473.14462 429.38684 477.5593 424.62866 487.76337 c
424.19714 488.68872 423.84109 489.62988 423.55792 490.57996 c
h
454.35086 479.37225 m
S
0 i
CM
62.684063 80.53511 m
63.688911 79.24897 l
65.222618 79.80719 l
64.309937 78.454086 l
65.314789 77.167938 l
63.745872 77.617821 l
62.833187 76.264717 l
62.776226 77.895859 l
61.207314 78.345741 l
62.741024 78.903969 l
h
62.684063 80.53511 m
f
53.320675 80.150085 m
54.32552 78.863937 l
55.85923 79.422165 l
54.946548 78.069054 l
55.951397 76.782913 l
54.382481 77.232788 l
53.469799 75.879684 l
53.412838 77.510834 l
51.843922 77.960709 l
53.377636 78.518936 l
h
53.320675 80.150085 m
f
45.900406 74.426361 m
46.905254 73.140221 l
48.438965 73.698441 l
47.526283 72.345337 l
48.531128 71.059189 l
46.962215 71.509071 l
46.049534 70.15596 l
45.992573 71.787109 l
44.423656 72.236992 l
45.957367 72.795212 l
h
45.900406 74.426361 m
f
2 w
2 J
0 j
0.60000002 i
1 0 0 -1 -383.03998 558 cm
402.16992 500.8638 m
477.34534 473.50217 l
S
0.5 w
403.12787 503.4957 m
478.30328 476.13409 l
S
0 i
0.93969262 0.34202015 0.34202015 -0.93969262 -526.30383 376.38998 cm
/F2.1[ 12.427 0 0 -12.427 0 0]sf
408.31091 500.74976 m
(!"#$%&'!\()[ 7.592897 8.288809 8.288809 3.790235 11.731088 9.668206 4.834103 7.592897 0.000000 ] xS
1.4853215 w
1 J
1 j
0.60000002 i
1 0 0 -1 -383.03998 558 cm
477.44467 496.87881 m
477.39441 501.61426 476.35721 506.41537 474.22549 510.98682 c
466.22168 528.15118 445.81885 535.57721 428.65451 527.5733 c
424.08307 525.44159 420.20239 522.43042 417.12003 518.83521 c
h
477.44467 496.87881 m
S
0.74266076 w
474.69077 498.30682 m
474.46869 502.19235 473.5199 506.10175 471.77481 509.84406 c
464.40213 525.65497 445.60815 532.49542 429.79727 525.12262 c
426.05499 523.37756 422.81525 520.99268 420.14755 518.15894 c
h
474.69077 498.30682 m
S
0 i
1 1 1 sc
CM
80.442055 53.539978 m
80.158897 52.589897 79.802834 51.648716 79.371338 50.723366 c
74.613136 40.519314 62.483868 36.104618 52.279839 40.862869 c
51.354485 41.294365 50.476746 41.786476 49.649136 42.332275 c
h
80.442055 53.539978 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -383.03998 558 cm
463.48206 504.46002 m
463.19888 505.4101 462.84283 506.35126 462.41132 507.27661 c
457.65314 517.48065 445.52386 521.89539 435.31982 517.13715 c
434.39447 516.70563 433.51672 516.2135 432.68912 515.66772 c
h
463.48206 504.46002 m
S
0 i
CM
75.059593 46.533634 m
75.002632 48.16478 l
76.536339 48.723007 l
74.967422 49.172886 l
74.910461 50.804031 l
73.99778 49.450928 l
72.428864 49.900806 l
73.433716 48.614662 l
72.521034 47.261555 l
74.054741 47.819778 l
h
75.059593 46.533634 m
f
67.63932 40.809914 m
67.582359 42.441063 l
69.116074 42.999287 l
67.547157 43.449165 l
67.490196 45.080315 l
66.577515 43.727207 l
65.008598 44.177086 l
66.013451 42.890942 l
65.100761 41.537834 l
66.634476 42.096058 l
h
67.63932 40.809914 m
f
58.275932 40.424885 m
58.218971 42.05603 l
59.752682 42.614254 l
58.183769 43.064133 l
58.126808 44.695282 l
57.214127 43.342175 l
55.64521 43.792053 l
56.650059 42.505909 l
55.737373 41.152802 l
57.271088 41.711029 l
h
58.275932 40.424885 m
f
2 w
2 J
0 j
0.60000002 i
1 0 0 -1 -383.03998 558 cm
409.35263 520.59808 m
484.52805 493.23648 l
S
0.5 w
408.39468 517.96619 m
483.5701 490.60458 l
S
ep
end
%%Trailer
%%EOF
